ARM GAS  /tmp/ccAKQp7X.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"oscillator.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN7daisysp10OscillatorD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN7daisysp10OscillatorD2Ev:
  27              	.LVL0:
  28              	.LFB2825:
  29              		.file 1 "../../../DaisySP/Source/Synthesis/oscillator.h"
   1:../../../DaisySP/Source/Synthesis/oscillator.h **** /*
   2:../../../DaisySP/Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../../DaisySP/Source/Synthesis/oscillator.h **** 
   4:../../../DaisySP/Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../../DaisySP/Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../../DaisySP/Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../../DaisySP/Source/Synthesis/oscillator.h **** */
   8:../../../DaisySP/Source/Synthesis/oscillator.h **** 
   9:../../../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
  10:../../../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
  15:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  16:../../../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../../DaisySP/Source/Synthesis/oscillator.h **** {
  18:../../../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../../DaisySP/Source/Synthesis/oscillator.h **** */
  20:../../../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  21:../../../DaisySP/Source/Synthesis/oscillator.h **** {
  22:../../../DaisySP/Source/Synthesis/oscillator.h ****   public:
  23:../../../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  30              		.loc 1 24 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
ARM GAS  /tmp/ccAKQp7X.s 			page 2


  35              		.loc 1 24 20 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE2825:
  40              		.weak	_ZN7daisysp10OscillatorD1Ev
  41              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB4676:
  54              		.file 2 "../../../libDaisy/src/daisy_seed.h"
   1:../../../libDaisy/src/daisy_seed.h **** #pragma once
   2:../../../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../../libDaisy/src/daisy_seed.h **** 
   5:../../../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../../libDaisy/src/daisy_seed.h **** 
   7:../../../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../../libDaisy/src/daisy_seed.h **** 
  10:../../../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../../../libDaisy/src/daisy_seed.h **** {
  12:../../../libDaisy/src/daisy_seed.h **** /**
  13:../../../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../../libDaisy/src/daisy_seed.h **** 
  16:../../../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../../libDaisy/src/daisy_seed.h **** */
  18:../../../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../../../libDaisy/src/daisy_seed.h **** {
  20:../../../libDaisy/src/daisy_seed.h ****   public:
  21:../../../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB187:
  61              	.LBI187:
  62              		.file 3 "../../../libDaisy/src/sys/system.h"
   1:../../../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../../libDaisy/src/sys/system.h **** 
   4:../../../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../../libDaisy/src/sys/system.h **** 
   6:../../../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../../../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../../libDaisy/src/sys/system.h **** 
   9:../../../libDaisy/src/sys/system.h **** namespace daisy
ARM GAS  /tmp/ccAKQp7X.s 			page 3


  10:../../../libDaisy/src/sys/system.h **** {
  11:../../../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../../libDaisy/src/sys/system.h ****  **
  15:../../../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../../../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../../../libDaisy/src/sys/system.h ****  */
  18:../../../libDaisy/src/sys/system.h **** class System
  19:../../../libDaisy/src/sys/system.h **** {
  20:../../../libDaisy/src/sys/system.h ****   public:
  21:../../../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../../libDaisy/src/sys/system.h ****     struct Config
  23:../../../libDaisy/src/sys/system.h ****     {
  24:../../../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../../libDaisy/src/sys/system.h ****         {
  27:../../../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../../libDaisy/src/sys/system.h ****         };
  30:../../../libDaisy/src/sys/system.h **** 
  31:../../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../../../libDaisy/src/sys/system.h ****          ** */
  35:../../../libDaisy/src/sys/system.h ****         void Defaults()
  36:../../../libDaisy/src/sys/system.h ****         {
  37:../../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../../libDaisy/src/sys/system.h ****         }
  42:../../../libDaisy/src/sys/system.h **** 
  43:../../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../../../libDaisy/src/sys/system.h ****          ** */
  47:../../../libDaisy/src/sys/system.h ****         void Boost()
  48:../../../libDaisy/src/sys/system.h ****         {
  49:../../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../../libDaisy/src/sys/system.h ****         }
  54:../../../libDaisy/src/sys/system.h **** 
  55:../../../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../../../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../../../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../../libDaisy/src/sys/system.h ****     };
  60:../../../libDaisy/src/sys/system.h **** 
  61:../../../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../../../libDaisy/src/sys/system.h ****     {
  64:../../../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../../../libDaisy/src/sys/system.h ****         DTCMRAM,
ARM GAS  /tmp/ccAKQp7X.s 			page 4


  67:../../../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../../../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../../../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../../../libDaisy/src/sys/system.h ****         SDRAM,
  71:../../../libDaisy/src/sys/system.h ****         QSPI,
  72:../../../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../../../libDaisy/src/sys/system.h ****     };
  74:../../../libDaisy/src/sys/system.h **** 
  75:../../../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../../../libDaisy/src/sys/system.h ****     {
  78:../../../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../../../libDaisy/src/sys/system.h ****         {
  80:../../../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../../libDaisy/src/sys/system.h ****         } status;
  85:../../../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../../../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../../../libDaisy/src/sys/system.h ****         {
  88:../../../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../../../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../../../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../../libDaisy/src/sys/system.h ****             LAST
  93:../../../libDaisy/src/sys/system.h ****         } version;
  94:../../../libDaisy/src/sys/system.h ****     };
  95:../../../libDaisy/src/sys/system.h **** 
  96:../../../libDaisy/src/sys/system.h ****     System() {}
  97:../../../libDaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 97 5 view .LVU3
  64              		.loc 3 97 5 is_stmt 0 view .LVU4
  65              	.LBE187:
  66              	.LBB188:
  67              	.LBI188:
  68              		.file 4 "../../../libDaisy/src/hid/usb.h"
   1:../../../libDaisy/src/hid/usb.h **** #pragma once
   2:../../../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../../libDaisy/src/hid/usb.h **** 
   7:../../../libDaisy/src/hid/usb.h **** namespace daisy
   8:../../../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../../../libDaisy/src/hid/usb.h ****     @{
  10:../../../libDaisy/src/hid/usb.h **** */
  11:../../../libDaisy/src/hid/usb.h **** 
  12:../../../libDaisy/src/hid/usb.h **** {
  13:../../../libDaisy/src/hid/usb.h **** /** 
  14:../../../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../../../libDaisy/src/hid/usb.h **** */
  18:../../../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../../../libDaisy/src/hid/usb.h **** {
  20:../../../libDaisy/src/hid/usb.h ****   public:
ARM GAS  /tmp/ccAKQp7X.s 			page 5


  21:../../../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../../libDaisy/src/hid/usb.h ****     enum class Result
  23:../../../libDaisy/src/hid/usb.h ****     {
  24:../../../libDaisy/src/hid/usb.h ****         OK,
  25:../../../libDaisy/src/hid/usb.h ****         ERR,
  26:../../../libDaisy/src/hid/usb.h ****     };
  27:../../../libDaisy/src/hid/usb.h **** 
  28:../../../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../../libDaisy/src/hid/usb.h ****     {
  31:../../../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../../libDaisy/src/hid/usb.h ****     };
  35:../../../libDaisy/src/hid/usb.h **** 
  36:../../../libDaisy/src/hid/usb.h **** 
  37:../../../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../../libDaisy/src/hid/usb.h **** 
  40:../../../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../../libDaisy/src/hid/usb.h **** 
  42:../../../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE188:
  72              	.LBB189:
  73              	.LBI189:
  74              		.file 5 "../../../libDaisy/src/per/adc.h"
   1:../../../libDaisy/src/per/adc.h **** #pragma once
   2:../../../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../../../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../../libDaisy/src/per/adc.h **** 
   9:../../../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../../libDaisy/src/per/adc.h **** 
  11:../../../libDaisy/src/per/adc.h **** namespace daisy
  12:../../../libDaisy/src/per/adc.h **** {
  13:../../../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../../../libDaisy/src/per/adc.h ****     @{
  15:../../../libDaisy/src/per/adc.h **** */
  16:../../../libDaisy/src/per/adc.h **** 
  17:../../../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../../libDaisy/src/per/adc.h **** */
  21:../../../libDaisy/src/per/adc.h **** 
  22:../../../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../../libDaisy/src/per/adc.h ****  *           one channel.
  26:../../../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../../libDaisy/src/per/adc.h ****  *           inputs connected.
ARM GAS  /tmp/ccAKQp7X.s 			page 6


  30:../../../libDaisy/src/per/adc.h **** */
  31:../../../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../../../libDaisy/src/per/adc.h **** {
  33:../../../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../../../libDaisy/src/per/adc.h ****     {
  36:../../../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../../libDaisy/src/per/adc.h ****     };
  41:../../../libDaisy/src/per/adc.h **** 
  42:../../../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../../../libDaisy/src/per/adc.h ****     {
  45:../../../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../../libDaisy/src/per/adc.h ****     };
  54:../../../libDaisy/src/per/adc.h **** 
  55:../../../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../../libDaisy/src/per/adc.h ****      */
  59:../../../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../../libDaisy/src/per/adc.h **** 
  61:../../../libDaisy/src/per/adc.h ****     /** 
  62:../../../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../../../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../../../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../../libDaisy/src/per/adc.h ****     */
  74:../../../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../../libDaisy/src/per/adc.h **** 
  81:../../../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../../../libDaisy/src/per/adc.h **** };
  86:../../../libDaisy/src/per/adc.h **** 
ARM GAS  /tmp/ccAKQp7X.s 			page 7


  87:../../../libDaisy/src/per/adc.h **** /**
  88:../../../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../../libDaisy/src/per/adc.h **** */
  90:../../../libDaisy/src/per/adc.h **** class AdcHandle
  91:../../../libDaisy/src/per/adc.h **** {
  92:../../../libDaisy/src/per/adc.h ****   public:
  93:../../../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../../../libDaisy/src/per/adc.h ****     {
  96:../../../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../../../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../../../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../../../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../../../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../../../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../../../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../../../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../../../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../../../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../../libDaisy/src/per/adc.h ****     };
 108:../../../libDaisy/src/per/adc.h **** 
 109:../../../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 110 5 is_stmt 1 view .LVU7
  76              		.loc 5 110 5 is_stmt 0 view .LVU8
  77              	.LBE189:
  78              	.LBB190:
  79              	.LBI190:
  80              		.file 6 "../../../libDaisy/src/hid/audio.h"
   1:../../../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../../libDaisy/src/hid/audio.h **** 
   4:../../../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../../libDaisy/src/hid/audio.h **** 
   6:../../../libDaisy/src/hid/audio.h **** namespace daisy
   7:../../../libDaisy/src/hid/audio.h **** {
   8:../../../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../../../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../../../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../../libDaisy/src/hid/audio.h ****  */
  22:../../../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../../../libDaisy/src/hid/audio.h **** {
  24:../../../libDaisy/src/hid/audio.h ****   public:
  25:../../../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../../libDaisy/src/hid/audio.h ****     struct Config
ARM GAS  /tmp/ccAKQp7X.s 			page 8


  28:../../../libDaisy/src/hid/audio.h ****     {
  29:../../../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../../../libDaisy/src/hid/audio.h **** 
  32:../../../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../../libDaisy/src/hid/audio.h **** 
  35:../../../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../../libDaisy/src/hid/audio.h ****         float postgain;
  37:../../../libDaisy/src/hid/audio.h **** 
  38:../../../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../../libDaisy/src/hid/audio.h ****          */
  41:../../../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../../../libDaisy/src/hid/audio.h **** 
  43:../../../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../../libDaisy/src/hid/audio.h ****         Config()
  45:../../../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../../../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../../../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../../../libDaisy/src/hid/audio.h ****         {
  50:../../../libDaisy/src/hid/audio.h ****         }
  51:../../../libDaisy/src/hid/audio.h ****     };
  52:../../../libDaisy/src/hid/audio.h **** 
  53:../../../libDaisy/src/hid/audio.h ****     enum class Result
  54:../../../libDaisy/src/hid/audio.h ****     {
  55:../../../libDaisy/src/hid/audio.h ****         OK,
  56:../../../libDaisy/src/hid/audio.h ****         ERR,
  57:../../../libDaisy/src/hid/audio.h ****     };
  58:../../../libDaisy/src/hid/audio.h **** 
  59:../../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../../libDaisy/src/hid/audio.h ****      */
  63:../../../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../../libDaisy/src/hid/audio.h **** 
  65:../../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../../libDaisy/src/hid/audio.h ****      */
  68:../../../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../../libDaisy/src/hid/audio.h **** 
  70:../../../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../../libDaisy/src/hid/audio.h ****      */
  73:../../../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  75:../../../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../../../libDaisy/src/hid/audio.h **** 
  77:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../../libDaisy/src/hid/audio.h ****     */
  81:../../../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../../libDaisy/src/hid/audio.h **** 
  83:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
ARM GAS  /tmp/ccAKQp7X.s 			page 9


  85:../../../libDaisy/src/hid/audio.h ****     */
  86:../../../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../../libDaisy/src/hid/audio.h **** 
  88:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../../libDaisy/src/hid/audio.h ****      */
  91:../../../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../../../libDaisy/src/hid/audio.h **** 
  95:../../../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 96 5 is_stmt 1 view .LVU9
  82              		.loc 6 96 5 is_stmt 0 view .LVU10
  83              	.LBE190:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE4676:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._Z13QuantizePitchf9QuantModei,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.global	_Z13QuantizePitchf9QuantModei
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_Z13QuantizePitchf9QuantModei:
 101              	.LVL2:
 102              	.LFB4681:
 103              		.file 7 "oscillator.cpp"
   1:oscillator.cpp **** #include "daisysp.h"
   2:oscillator.cpp **** #include "daisy_seed.h"
   3:oscillator.cpp **** 
   4:oscillator.cpp **** using namespace daisy;
   5:oscillator.cpp **** using namespace daisysp;
   6:oscillator.cpp **** using namespace seed;
   7:oscillator.cpp **** 
   8:oscillator.cpp **** DaisySeed hw;
   9:oscillator.cpp **** Oscillator osc1, osc2;
  10:oscillator.cpp **** AdcChannelConfig adcConfig[7];  // 7 controls (added key control)
  11:oscillator.cpp **** 
  12:oscillator.cpp **** float volume1 = 0.f, volume2 = 0.f;
  13:oscillator.cpp **** float pitch1 = 0.f, pitch2 = 0.f;
  14:oscillator.cpp **** float pulseW1 = 0.f, pulseW2 = 0.f;
  15:oscillator.cpp **** float keyPot = 0.f;  // Key control potentiometer
  16:oscillator.cpp **** int currentWaveform1 = 0, currentWaveform2 = 0;
  17:oscillator.cpp **** bool lastButtonState1 = false, lastButtonState2 = false;
  18:oscillator.cpp **** bool lastButtonStateQuant = false;
  19:oscillator.cpp **** bool lastButtonStateScaleLock = false;
  20:oscillator.cpp **** 
  21:oscillator.cpp **** // Quantization modes
  22:oscillator.cpp **** enum QuantMode { OFF, CHROMATIC, MAJOR, MINOR };
  23:oscillator.cpp **** QuantMode quantizeMode = OFF;
  24:oscillator.cpp **** 
ARM GAS  /tmp/ccAKQp7X.s 			page 10


  25:oscillator.cpp **** // Scale lock mode - when true, both oscillators use the same scale notes
  26:oscillator.cpp **** bool scaleLockEnabled = false;
  27:oscillator.cpp **** 
  28:oscillator.cpp **** // Convert pitch value to quantized frequency
  29:oscillator.cpp **** float QuantizePitch(float pitch, QuantMode mode, int root) {
 104              		.loc 7 29 60 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 56
 107              		@ frame_needed = 0, uses_anonymous_args = 0
  30:oscillator.cpp ****     // Define chromatic scale range (MIDI notes 24-108 = C1-C8)
  31:oscillator.cpp ****     const float minNote = 24.0f;
 108              		.loc 7 31 5 view .LVU13
  32:oscillator.cpp ****     const float maxNote = 108.0f;
 109              		.loc 7 32 5 view .LVU14
  33:oscillator.cpp ****     const float range = maxNote - minNote;
 110              		.loc 7 33 5 view .LVU15
  34:oscillator.cpp ****     
  35:oscillator.cpp ****     // Calculate MIDI note number
  36:oscillator.cpp ****     float midiNote = minNote + (pitch * range);
 111              		.loc 7 36 5 view .LVU16
 112              		.loc 7 36 11 is_stmt 0 view .LVU17
 113 0000 F3EE080A 		vmov.f32	s1, #2.4e+1
 114 0004 DFED507A 		vldr.32	s15, .L23
 115              	.LBB191:
  37:oscillator.cpp ****     
  38:oscillator.cpp ****     if (mode == CHROMATIC) {
 116              		.loc 7 38 5 view .LVU18
 117 0008 0128     		cmp	r0, #1
 118              	.LBE191:
  29:oscillator.cpp ****     // Define chromatic scale range (MIDI notes 24-108 = C1-C8)
 119              		.loc 7 29 60 view .LVU19
 120 000a 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 121              		.cfi_def_cfa_offset 28
 122              		.cfi_offset 4, -28
 123              		.cfi_offset 5, -24
 124              		.cfi_offset 6, -20
 125              		.cfi_offset 7, -16
 126              		.cfi_offset 8, -12
 127              		.cfi_offset 9, -8
 128              		.cfi_offset 14, -4
  36:oscillator.cpp ****     
 129              		.loc 7 36 11 view .LVU20
 130 000e E0EE270A 		vfma.f32	s1, s0, s15
 131              	.LVL3:
 132              		.loc 7 38 5 is_stmt 1 view .LVU21
  29:oscillator.cpp ****     // Define chromatic scale range (MIDI notes 24-108 = C1-C8)
 133              		.loc 7 29 60 is_stmt 0 view .LVU22
 134 0012 8FB0     		sub	sp, sp, #60
 135              		.cfi_def_cfa_offset 88
 136              	.LBB207:
 137              		.loc 7 38 5 view .LVU23
 138 0014 00F09580 		beq	.L21
 139              	.LBE207:
  39:oscillator.cpp ****         // Quantize to nearest semitone
  40:oscillator.cpp ****         midiNote = roundf(midiNote);
  41:oscillator.cpp ****     }
  42:oscillator.cpp ****     else if (mode == MAJOR || mode == MINOR) {
ARM GAS  /tmp/ccAKQp7X.s 			page 11


 140              		.loc 7 42 10 is_stmt 1 view .LVU24
 141              	.LBB208:
 142              	.LBB192:
 143 0018 831E     		subs	r3, r0, #2
 144 001a 012B     		cmp	r3, #1
 145 001c 12D9     		bls	.L22
 146              	.LVL4:
 147              	.L6:
 148              		.loc 7 42 10 is_stmt 0 view .LVU25
 149              	.LBE192:
 150              	.LBE208:
  43:oscillator.cpp ****         // Define scale patterns
  44:oscillator.cpp ****         const int majorScale[] = {0, 2, 4, 5, 7, 9, 11}; // Major scale intervals
  45:oscillator.cpp ****         const int minorScale[] = {0, 2, 3, 5, 7, 8, 10}; // Minor scale intervals
  46:oscillator.cpp ****         
  47:oscillator.cpp ****         const int* scale = (mode == MAJOR) ? majorScale : minorScale;
  48:oscillator.cpp ****         const int numNotes = 7;
  49:oscillator.cpp ****         
  50:oscillator.cpp ****         // Calculate base octave and note within octave
  51:oscillator.cpp ****         int octave = static_cast<int>(midiNote) / 12;
  52:oscillator.cpp ****         float noteInOctave = midiNote - (octave * 12.0f);
  53:oscillator.cpp ****         
  54:oscillator.cpp ****         // Find closest note in scale pattern
  55:oscillator.cpp ****         float minDistance = 12.0f;
  56:oscillator.cpp ****         int closestScaleNote = 0;
  57:oscillator.cpp ****         
  58:oscillator.cpp ****         for (int i = 0; i < numNotes; i++) {
  59:oscillator.cpp ****             // Calculate scale note with root applied
  60:oscillator.cpp ****             float scaleNote = (scale[i] + root) % 12;
  61:oscillator.cpp ****             
  62:oscillator.cpp ****             // Calculate distance to scale note
  63:oscillator.cpp ****             float distance = fabs(noteInOctave - scaleNote);
  64:oscillator.cpp ****             
  65:oscillator.cpp ****             // Check if closer in next octave
  66:oscillator.cpp ****             float nextOctaveDist = fabs(noteInOctave - (scaleNote + 12.0f));
  67:oscillator.cpp ****             if (nextOctaveDist < distance) {
  68:oscillator.cpp ****                 distance = nextOctaveDist;
  69:oscillator.cpp ****                 scaleNote += 12.0f;
  70:oscillator.cpp ****             }
  71:oscillator.cpp ****             
  72:oscillator.cpp ****             // Check if closer in previous octave
  73:oscillator.cpp ****             float prevOctaveDist = fabs(noteInOctave - (scaleNote - 12.0f));
  74:oscillator.cpp ****             if (prevOctaveDist < distance) {
  75:oscillator.cpp ****                 distance = prevOctaveDist;
  76:oscillator.cpp ****                 scaleNote -= 12.0f;
  77:oscillator.cpp ****             }
  78:oscillator.cpp ****             
  79:oscillator.cpp ****             if (distance < minDistance) {
  80:oscillator.cpp ****                 minDistance = distance;
  81:oscillator.cpp ****                 closestScaleNote = static_cast<int>(scaleNote);
  82:oscillator.cpp ****             }
  83:oscillator.cpp ****         }
  84:oscillator.cpp ****         
  85:oscillator.cpp ****         // Calculate final quantized MIDI note
  86:oscillator.cpp ****         midiNote = octave * 12 + closestScaleNote;
  87:oscillator.cpp ****     }
  88:oscillator.cpp ****     
ARM GAS  /tmp/ccAKQp7X.s 			page 12


  89:oscillator.cpp ****     // Convert MIDI note to frequency (A4 = 440Hz)
  90:oscillator.cpp ****     return 440.0f * powf(2.0f, (midiNote - 69.0f) / 12.0f);
 151              		.loc 7 90 5 is_stmt 1 view .LVU26
 152              		.loc 7 90 42 is_stmt 0 view .LVU27
 153 001e 9FED4B7A 		vldr.32	s14, .L23+4
 154              		.loc 7 90 25 view .LVU28
 155 0022 F2EE087A 		vmov.f32	s15, #1.2e+1
 156 0026 B0EE000A 		vmov.f32	s0, #2.0e+0
 157              	.LVL5:
 158              		.loc 7 90 42 view .LVU29
 159 002a 70EEC70A 		vsub.f32	s1, s1, s14
 160              	.LVL6:
 161              		.loc 7 90 25 view .LVU30
 162 002e C0EEA70A 		vdiv.f32	s1, s1, s15
 163 0032 FFF7FEFF 		bl	powf
 164              	.LVL7:
 165              		.loc 7 90 58 view .LVU31
 166 0036 DFED467A 		vldr.32	s15, .L23+8
  91:oscillator.cpp **** }
 167              		.loc 7 91 1 view .LVU32
 168 003a 20EE270A 		vmul.f32	s0, s0, s15
 169 003e 0FB0     		add	sp, sp, #60
 170              		.cfi_remember_state
 171              		.cfi_def_cfa_offset 28
 172              		@ sp needed
 173 0040 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 174              	.LVL8:
 175              	.L22:
 176              		.cfi_restore_state
 177              	.LBB209:
 178              	.LBB206:
 179              	.LBB193:
  44:oscillator.cpp ****         const int minorScale[] = {0, 2, 3, 5, 7, 8, 10}; // Minor scale intervals
 180              		.loc 7 44 9 is_stmt 1 view .LVU33
  51:oscillator.cpp ****         float noteInOctave = midiNote - (octave * 12.0f);
 181              		.loc 7 51 22 is_stmt 0 view .LVU34
 182 0044 BDEEE07A 		vcvt.s32.f32	s14, s1
  51:oscillator.cpp ****         float noteInOctave = midiNote - (octave * 12.0f);
 183              		.loc 7 51 13 view .LVU35
 184 0048 424B     		ldr	r3, .L23+12
  44:oscillator.cpp ****         const int minorScale[] = {0, 2, 3, 5, 7, 8, 10}; // Minor scale intervals
 185              		.loc 7 44 19 view .LVU36
 186 004a 6F46     		mov	r7, sp
  45:oscillator.cpp ****         
 187              		.loc 7 45 19 view .LVU37
 188 004c 07AE     		add	r6, sp, #28
  44:oscillator.cpp ****         const int minorScale[] = {0, 2, 3, 5, 7, 8, 10}; // Minor scale intervals
 189              		.loc 7 44 19 view .LVU38
 190 004e DFF80C81 		ldr	r8, .L23+20
  52:oscillator.cpp ****         
 191              		.loc 7 52 15 view .LVU39
 192 0052 F2EE087A 		vmov.f32	s15, #1.2e+1
  51:oscillator.cpp ****         float noteInOctave = midiNote - (octave * 12.0f);
 193              		.loc 7 51 22 view .LVU40
 194 0056 17EE104A 		vmov	r4, s14	@ int
  47:oscillator.cpp ****         const int numNotes = 7;
 195              		.loc 7 47 20 view .LVU41
ARM GAS  /tmp/ccAKQp7X.s 			page 13


 196 005a 0228     		cmp	r0, #2
 197 005c 0CBF     		ite	eq
 198 005e 3D46     		moveq	r5, r7
 199 0060 3546     		movne	r5, r6
 200 0062 8E46     		mov	lr, r1
  56:oscillator.cpp ****         
 201              		.loc 7 56 13 view .LVU42
 202 0064 DFED3C4A 		vldr.32	s9, .L23+16	@ int
  51:oscillator.cpp ****         float noteInOctave = midiNote - (octave * 12.0f);
 203              		.loc 7 51 13 view .LVU43
 204 0068 83FB0423 		smull	r2, r3, r3, r4
 205 006c E417     		asrs	r4, r4, #31
  55:oscillator.cpp ****         int closestScaleNote = 0;
 206              		.loc 7 55 15 view .LVU44
 207 006e B0EE675A 		vmov.f32	s10, s15
 208 0072 A5F1040C 		sub	ip, r5, #4
  51:oscillator.cpp ****         float noteInOctave = midiNote - (octave * 12.0f);
 209              		.loc 7 51 13 view .LVU45
 210 0076 C4EB6304 		rsb	r4, r4, r3, asr #1
 211 007a 1835     		adds	r5, r5, #24
  52:oscillator.cpp ****         
 212              		.loc 7 52 49 view .LVU46
 213 007c 07EE104A 		vmov	s14, r4	@ int
 214 0080 B8EEC77A 		vcvt.f32.s32	s14, s14
  44:oscillator.cpp ****         const int minorScale[] = {0, 2, 3, 5, 7, 8, 10}; // Minor scale intervals
 215              		.loc 7 44 19 view .LVU47
 216 0084 B8E80F00 		ldmia	r8!, {r0, r1, r2, r3}
 217              	.LVL9:
  52:oscillator.cpp ****         
 218              		.loc 7 52 15 view .LVU48
 219 0088 E7EE670A 		vfms.f32	s1, s14, s15
 220              	.LVL10:
  45:oscillator.cpp ****         
 221              		.loc 7 45 19 view .LVU49
 222 008c 08F10C09 		add	r9, r8, #12
  44:oscillator.cpp ****         const int minorScale[] = {0, 2, 3, 5, 7, 8, 10}; // Minor scale intervals
 223              		.loc 7 44 19 view .LVU50
 224 0090 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 225 0092 98E80700 		ldm	r8, {r0, r1, r2}
 226 0096 87E80700 		stm	r7, {r0, r1, r2}
  45:oscillator.cpp ****         
 227              		.loc 7 45 9 is_stmt 1 view .LVU51
  45:oscillator.cpp ****         
 228              		.loc 7 45 19 is_stmt 0 view .LVU52
 229 009a B9E80F00 		ldmia	r9!, {r0, r1, r2, r3}
 230 009e 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 231 00a0 99E80700 		ldm	r9, {r0, r1, r2}
 232 00a4 86E80700 		stm	r6, {r0, r1, r2}
  47:oscillator.cpp ****         const int numNotes = 7;
 233              		.loc 7 47 9 is_stmt 1 view .LVU53
 234              	.LVL11:
  48:oscillator.cpp ****         
 235              		.loc 7 48 9 view .LVU54
  51:oscillator.cpp ****         float noteInOctave = midiNote - (octave * 12.0f);
 236              		.loc 7 51 9 view .LVU55
  52:oscillator.cpp ****         
 237              		.loc 7 52 9 view .LVU56
ARM GAS  /tmp/ccAKQp7X.s 			page 14


  55:oscillator.cpp ****         int closestScaleNote = 0;
 238              		.loc 7 55 9 view .LVU57
  56:oscillator.cpp ****         
 239              		.loc 7 56 9 view .LVU58
  58:oscillator.cpp ****             // Calculate scale note with root applied
 240              		.loc 7 58 9 view .LVU59
 241              	.LBB194:
  58:oscillator.cpp ****             // Calculate scale note with root applied
 242              		.loc 7 58 27 view .LVU60
 243              	.L14:
 244              	.LBB195:
  60:oscillator.cpp ****             
 245              		.loc 7 60 13 view .LVU61
  80:oscillator.cpp ****                 closestScaleNote = static_cast<int>(scaleNote);
 246              		.loc 7 80 17 view .LVU62
  60:oscillator.cpp ****             
 247              		.loc 7 60 41 is_stmt 0 view .LVU63
 248 00a8 5CF8043F 		ldr	r3, [ip, #4]!
  66:oscillator.cpp ****             if (nextOctaveDist < distance) {
 249              		.loc 7 66 67 view .LVU64
 250 00ac B2EE086A 		vmov.f32	s12, #1.2e+1
  60:oscillator.cpp ****             
 251              		.loc 7 60 49 view .LVU65
 252 00b0 2849     		ldr	r1, .L23+12
  60:oscillator.cpp ****             
 253              		.loc 7 60 41 view .LVU66
 254 00b2 7344     		add	r3, r3, lr
  73:oscillator.cpp ****             if (prevOctaveDist < distance) {
 255              		.loc 7 73 67 view .LVU67
 256 00b4 F0EE466A 		vmov.f32	s13, s12
  60:oscillator.cpp ****             
 257              		.loc 7 60 49 view .LVU68
 258 00b8 81FB0321 		smull	r2, r1, r1, r3
 259 00bc DA17     		asrs	r2, r3, #31
 260 00be C2EB6102 		rsb	r2, r2, r1, asr #1
 261 00c2 02EB4202 		add	r2, r2, r2, lsl #1
 262 00c6 A3EB8203 		sub	r3, r3, r2, lsl #2
  60:oscillator.cpp ****             
 263              		.loc 7 60 19 view .LVU69
 264 00ca 07EE903A 		vmov	s15, r3	@ int
 265 00ce F8EEE77A 		vcvt.f32.s32	s15, s15
 266              	.LVL12:
  63:oscillator.cpp ****             
 267              		.loc 7 63 13 is_stmt 1 view .LVU70
 268              	.LBB196:
 269              	.LBI196:
 270              		.file 8 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.
   1:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
   3:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** //
   5:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // any later version.
  10:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
ARM GAS  /tmp/ccAKQp7X.s 			page 15


  11:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // GNU General Public License for more details.
  15:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  16:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  20:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  25:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** /** @file include/cmath
  26:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****  *
  29:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****  *  as macros in C).
  33:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****  */
  34:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  35:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** //
  36:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** //
  38:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  39:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #pragma GCC system_header
  40:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  41:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #include <bits/c++config.h>
  42:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #include <ext/type_traits.h>
  44:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #include_next <math.h>
  46:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #include <bits/std_abs.h>
  48:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  49:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  52:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef div
  54:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef acos
  55:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef asin
  56:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef atan
  57:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef atan2
  58:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef ceil
  59:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef cos
  60:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef cosh
  61:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef exp
  62:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef fabs
  63:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef floor
  64:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef fmod
  65:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef frexp
  66:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef ldexp
  67:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef log
ARM GAS  /tmp/ccAKQp7X.s 			page 16


  68:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef log10
  69:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef modf
  70:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef pow
  71:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef sin
  72:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef sinh
  73:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef sqrt
  74:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef tan
  75:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #undef tanh
  76:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  77:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** extern "C++"
  78:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** {
  79:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** {
  81:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  83:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::acos;
  84:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  85:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   acos(float __x)
  88:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  90:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   acos(long double __x)
  92:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #endif
  94:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
  95:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   template<typename _Tp>
  96:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****                                     double>::__type
  99:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     acos(_Tp __x)
 100:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 102:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::asin;
 103:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 104:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   asin(float __x)
 107:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 109:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   asin(long double __x)
 111:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #endif
 113:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 114:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   template<typename _Tp>
 115:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****                                     double>::__type
 118:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     asin(_Tp __x)
 119:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 121:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::atan;
 122:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 123:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  /tmp/ccAKQp7X.s 			page 17


 125:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   atan(float __x)
 126:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 128:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   atan(long double __x)
 130:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #endif
 132:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 133:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   template<typename _Tp>
 134:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****                                     double>::__type
 137:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     atan(_Tp __x)
 138:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 140:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::atan2;
 141:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 142:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   atan2(float __y, float __x)
 145:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 147:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #endif
 151:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 152:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     {
 157:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     }
 160:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 161:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::ceil;
 162:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 163:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   ceil(float __x)
 166:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 168:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   ceil(long double __x)
 170:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #endif
 172:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 173:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   template<typename _Tp>
 174:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****                                     double>::__type
 177:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     ceil(_Tp __x)
 178:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 180:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::cos;
 181:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
ARM GAS  /tmp/ccAKQp7X.s 			page 18


 182:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   cos(float __x)
 185:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 187:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   cos(long double __x)
 189:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #endif
 191:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 192:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   template<typename _Tp>
 193:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****                                     double>::__type
 196:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     cos(_Tp __x)
 197:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 199:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::cosh;
 200:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 201:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   cosh(float __x)
 204:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 206:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   cosh(long double __x)
 208:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #endif
 210:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 211:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   template<typename _Tp>
 212:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****                                     double>::__type
 215:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     cosh(_Tp __x)
 216:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 218:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::exp;
 219:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 220:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   exp(float __x)
 223:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 225:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   exp(long double __x)
 227:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #endif
 229:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 230:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   template<typename _Tp>
 231:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****                                     double>::__type
 234:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     exp(_Tp __x)
 235:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
 237:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   using ::fabs;
 238:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** 
ARM GAS  /tmp/ccAKQp7X.s 			page 19


 239:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   fabs(float __x)
 271              		.loc 8 241 3 view .LVU71
 272              	.LBB197:
 242:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_fabsf(__x); }
 273              		.loc 8 242 5 view .LVU72
 274              	.LBE197:
 275              	.LBE196:
  66:oscillator.cpp ****             if (nextOctaveDist < distance) {
 276              		.loc 7 66 67 is_stmt 0 view .LVU73
 277 00d2 37EE866A 		vadd.f32	s12, s15, s12
  63:oscillator.cpp ****             
 278              		.loc 7 63 34 view .LVU74
 279 00d6 30EEE77A 		vsub.f32	s14, s1, s15
 280              	.LVL13:
  66:oscillator.cpp ****             if (nextOctaveDist < distance) {
 281              		.loc 7 66 40 view .LVU75
 282 00da 70EEC65A 		vsub.f32	s11, s1, s12
 283              	.LBB199:
 284              	.LBB198:
 285              		.loc 8 242 31 view .LVU76
 286 00de B0EEC77A 		vabs.f32	s14, s14
 287              	.LVL14:
 288              		.loc 8 242 31 view .LVU77
 289              	.LBE198:
 290              	.LBE199:
  66:oscillator.cpp ****             if (nextOctaveDist < distance) {
 291              		.loc 7 66 13 is_stmt 1 view .LVU78
 292              	.LBB200:
 293              	.LBI200:
 241:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_fabsf(__x); }
 294              		.loc 8 241 3 view .LVU79
 295              	.LBB201:
 296              		.loc 8 242 5 view .LVU80
 297              		.loc 8 242 31 is_stmt 0 view .LVU81
 298 00e2 F0EEE55A 		vabs.f32	s11, s11
 299              	.LVL15:
 300              		.loc 8 242 31 view .LVU82
 301              	.LBE201:
 302              	.LBE200:
  67:oscillator.cpp ****                 distance = nextOctaveDist;
 303              		.loc 7 67 13 is_stmt 1 view .LVU83
 304 00e6 B4EEE57A 		vcmpe.f32	s14, s11
 305 00ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 306 00ee 03DD     		ble	.L8
  68:oscillator.cpp ****                 scaleNote += 12.0f;
 307              		.loc 7 68 26 is_stmt 0 view .LVU84
 308 00f0 B0EE657A 		vmov.f32	s14, s11
 309              	.LVL16:
  69:oscillator.cpp ****             }
 310              		.loc 7 69 27 view .LVU85
 311 00f4 F0EE467A 		vmov.f32	s15, s12
 312              	.LVL17:
 313              	.L8:
  73:oscillator.cpp ****             if (prevOctaveDist < distance) {
 314              		.loc 7 73 13 is_stmt 1 view .LVU86
ARM GAS  /tmp/ccAKQp7X.s 			page 20


  73:oscillator.cpp ****             if (prevOctaveDist < distance) {
 315              		.loc 7 73 67 is_stmt 0 view .LVU87
 316 00f8 77EEE66A 		vsub.f32	s13, s15, s13
 317              	.LVL18:
 318              	.LBB202:
 319              	.LBI202:
 241:/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2.1/cmath ****   { return __builtin_fabsf(__x); }
 320              		.loc 8 241 3 is_stmt 1 view .LVU88
 321              	.LBB203:
 322              		.loc 8 242 5 view .LVU89
 323              	.LBE203:
 324              	.LBE202:
  73:oscillator.cpp ****             if (prevOctaveDist < distance) {
 325              		.loc 7 73 40 is_stmt 0 view .LVU90
 326 00fc 30EEE66A 		vsub.f32	s12, s1, s13
 327              	.LVL19:
 328              	.LBB205:
 329              	.LBB204:
 330              		.loc 8 242 31 view .LVU91
 331 0100 B0EEC66A 		vabs.f32	s12, s12
 332              	.LVL20:
 333              		.loc 8 242 31 view .LVU92
 334              	.LBE204:
 335              	.LBE205:
  74:oscillator.cpp ****                 distance = prevOctaveDist;
 336              		.loc 7 74 13 is_stmt 1 view .LVU93
 337 0104 B4EEC67A 		vcmpe.f32	s14, s12
 338 0108 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 339 010c 03DD     		ble	.L10
  75:oscillator.cpp ****                 scaleNote -= 12.0f;
 340              		.loc 7 75 26 is_stmt 0 view .LVU94
 341 010e B0EE467A 		vmov.f32	s14, s12
 342              	.LVL21:
  76:oscillator.cpp ****             }
 343              		.loc 7 76 27 view .LVU95
 344 0112 F0EE667A 		vmov.f32	s15, s13
 345              	.LVL22:
 346              	.L10:
  79:oscillator.cpp ****                 minDistance = distance;
 347              		.loc 7 79 13 is_stmt 1 view .LVU96
  81:oscillator.cpp ****             }
 348              		.loc 7 81 17 view .LVU97
  79:oscillator.cpp ****                 minDistance = distance;
 349              		.loc 7 79 13 is_stmt 0 view .LVU98
 350 0116 B4EEC57A 		vcmpe.f32	s14, s10
 351 011a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 352 011e 03D5     		bpl	.L12
  81:oscillator.cpp ****             }
 353              		.loc 7 81 34 view .LVU99
 354 0120 FDEEE74A 		vcvt.s32.f32	s9, s15
 355              	.LVL23:
  80:oscillator.cpp ****                 closestScaleNote = static_cast<int>(scaleNote);
 356              		.loc 7 80 29 view .LVU100
 357 0124 B0EE475A 		vmov.f32	s10, s14
 358              	.LVL24:
 359              	.L12:
  80:oscillator.cpp ****                 closestScaleNote = static_cast<int>(scaleNote);
ARM GAS  /tmp/ccAKQp7X.s 			page 21


 360              		.loc 7 80 29 view .LVU101
 361              	.LBE195:
  58:oscillator.cpp ****             // Calculate scale note with root applied
 362              		.loc 7 58 9 is_stmt 1 discriminator 2 view .LVU102
  58:oscillator.cpp ****             // Calculate scale note with root applied
 363              		.loc 7 58 27 discriminator 2 view .LVU103
 364 0128 6545     		cmp	r5, ip
 365 012a BDD1     		bne	.L14
 366              	.LBE194:
  86:oscillator.cpp ****     }
 367              		.loc 7 86 9 view .LVU104
  86:oscillator.cpp ****     }
 368              		.loc 7 86 27 is_stmt 0 view .LVU105
 369 012c 04EB4404 		add	r4, r4, r4, lsl #1
 370              	.LVL25:
  86:oscillator.cpp ****     }
 371              		.loc 7 86 32 view .LVU106
 372 0130 14EE903A 		vmov	r3, s9	@ int
 373 0134 03EB8403 		add	r3, r3, r4, lsl #2
 374 0138 00EE903A 		vmov	s1, r3	@ int
 375              	.LVL26:
  86:oscillator.cpp ****     }
 376              		.loc 7 86 18 view .LVU107
 377 013c F8EEE00A 		vcvt.f32.s32	s1, s1
 378              	.LVL27:
  86:oscillator.cpp ****     }
 379              		.loc 7 86 18 view .LVU108
 380              	.LBE193:
 381 0140 6DE7     		b	.L6
 382              	.LVL28:
 383              	.L21:
  86:oscillator.cpp ****     }
 384              		.loc 7 86 18 view .LVU109
 385              	.LBE206:
  40:oscillator.cpp ****     }
 386              		.loc 7 40 9 is_stmt 1 view .LVU110
  40:oscillator.cpp ****     }
 387              		.loc 7 40 26 is_stmt 0 view .LVU111
 388 0142 F8FE600A 		vrinta.f32	s1, s1
 389              	.LVL29:
  40:oscillator.cpp ****     }
 390              		.loc 7 40 26 view .LVU112
 391 0146 6AE7     		b	.L6
 392              	.L24:
 393              		.align	2
 394              	.L23:
 395 0148 0000A842 		.word	1118306304
 396 014c 00008A42 		.word	1116340224
 397 0150 0000DC43 		.word	1138491392
 398 0154 ABAAAA2A 		.word	715827883
 399 0158 00000000 		.word	0
 400 015c 00000000 		.word	.LANCHOR0
 401              	.LBE209:
 402              		.cfi_endproc
 403              	.LFE4681:
 405              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 406              		.align	1
ARM GAS  /tmp/ccAKQp7X.s 			page 22


 407              		.p2align 2,,3
 408              		.global	_Z13AudioCallbackPKPKfPPfj
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv5-d16
 414              	_Z13AudioCallbackPKPKfPPfj:
 415              	.LVL30:
 416              	.LFB4682:
  92:oscillator.cpp **** 
  93:oscillator.cpp **** void AudioCallback(AudioHandle::InputBuffer in,
  94:oscillator.cpp ****                   AudioHandle::OutputBuffer out,
  95:oscillator.cpp ****                   size_t size)
  96:oscillator.cpp **** {
 417              		.loc 7 96 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 8
 420              		@ frame_needed = 0, uses_anonymous_args = 0
  97:oscillator.cpp ****     // Read all potentiometers
  98:oscillator.cpp ****     volume1 = hw.adc.GetFloat(0);  // OSC1 volume
 421              		.loc 7 98 5 view .LVU114
  96:oscillator.cpp ****     // Read all potentiometers
 422              		.loc 7 96 1 is_stmt 0 view .LVU115
 423 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 424              		.cfi_def_cfa_offset 36
 425              		.cfi_offset 4, -36
 426              		.cfi_offset 5, -32
 427              		.cfi_offset 6, -28
 428              		.cfi_offset 7, -24
 429              		.cfi_offset 8, -20
 430              		.cfi_offset 9, -16
 431              		.cfi_offset 10, -12
 432              		.cfi_offset 11, -8
 433              		.cfi_offset 14, -4
 434              		.loc 7 98 30 view .LVU116
 435 0004 7148     		ldr	r0, .L43
 436              	.LVL31:
  96:oscillator.cpp ****     // Read all potentiometers
 437              		.loc 7 96 1 view .LVU117
 438 0006 0D46     		mov	r5, r1
 439              		.loc 7 98 13 view .LVU118
 440 0008 DFF8F4A1 		ldr	r10, .L43+52
 441              		.loc 7 98 30 view .LVU119
 442 000c 0021     		movs	r1, #0
 443              	.LVL32:
  96:oscillator.cpp ****     // Read all potentiometers
 444              		.loc 7 96 1 view .LVU120
 445 000e 1646     		mov	r6, r2
  99:oscillator.cpp ****     pitch1 = hw.adc.GetFloat(1);   // OSC1 pitch
 446              		.loc 7 99 12 view .LVU121
 447 0010 6F4F     		ldr	r7, .L43+4
 100:oscillator.cpp ****     pulseW1 = hw.adc.GetFloat(2);  // OSC1 pulse width
 448              		.loc 7 100 13 view .LVU122
 449 0012 DFF8F0B1 		ldr	fp, .L43+56
 101:oscillator.cpp **** 
 102:oscillator.cpp ****     // OSC2 values inverted
 103:oscillator.cpp ****     volume2 = 1.0f - hw.adc.GetFloat(3);  // OSC2 volume
ARM GAS  /tmp/ccAKQp7X.s 			page 23


 450              		.loc 7 103 13 view .LVU123
 451 0016 DFF8F081 		ldr	r8, .L43+60
 104:oscillator.cpp ****     pitch2 = 1.0f - hw.adc.GetFloat(4);   // OSC2 pitch
 452              		.loc 7 104 12 view .LVU124
 453 001a 6E4C     		ldr	r4, .L43+8
 105:oscillator.cpp ****     pulseW2 = 1.0f - hw.adc.GetFloat(5);  // OSC2 pulse width
 454              		.loc 7 105 13 view .LVU125
 455 001c DFF8EC91 		ldr	r9, .L43+64
  96:oscillator.cpp ****     // Read all potentiometers
 456              		.loc 7 96 1 view .LVU126
 457 0020 2DED048B 		vpush.64	{d8, d9}
 458              		.cfi_def_cfa_offset 52
 459              		.cfi_offset 80, -52
 460              		.cfi_offset 81, -48
 461              		.cfi_offset 82, -44
 462              		.cfi_offset 83, -40
 463 0024 83B0     		sub	sp, sp, #12
 464              		.cfi_def_cfa_offset 64
 103:oscillator.cpp ****     pitch2 = 1.0f - hw.adc.GetFloat(4);   // OSC2 pitch
 465              		.loc 7 103 20 view .LVU127
 466 0026 B7EE008A 		vmov.f32	s16, #1.0e+0
  98:oscillator.cpp ****     pitch1 = hw.adc.GetFloat(1);   // OSC1 pitch
 467              		.loc 7 98 30 view .LVU128
 468 002a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 469              	.LVL33:
  99:oscillator.cpp ****     pulseW1 = hw.adc.GetFloat(2);  // OSC1 pulse width
 470              		.loc 7 99 29 view .LVU129
 471 002e 0121     		movs	r1, #1
 472 0030 6648     		ldr	r0, .L43
  98:oscillator.cpp ****     pitch1 = hw.adc.GetFloat(1);   // OSC1 pitch
 473              		.loc 7 98 13 view .LVU130
 474 0032 8AED000A 		vstr.32	s0, [r10]
  99:oscillator.cpp ****     pulseW1 = hw.adc.GetFloat(2);  // OSC1 pulse width
 475              		.loc 7 99 5 is_stmt 1 view .LVU131
  99:oscillator.cpp ****     pulseW1 = hw.adc.GetFloat(2);  // OSC1 pulse width
 476              		.loc 7 99 29 is_stmt 0 view .LVU132
 477 0036 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 478              	.LVL34:
 100:oscillator.cpp **** 
 479              		.loc 7 100 30 view .LVU133
 480 003a 0221     		movs	r1, #2
 481 003c 6348     		ldr	r0, .L43
  99:oscillator.cpp ****     pulseW1 = hw.adc.GetFloat(2);  // OSC1 pulse width
 482              		.loc 7 99 12 view .LVU134
 483 003e 87ED000A 		vstr.32	s0, [r7]
 100:oscillator.cpp **** 
 484              		.loc 7 100 5 is_stmt 1 view .LVU135
 100:oscillator.cpp **** 
 485              		.loc 7 100 30 is_stmt 0 view .LVU136
 486 0042 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 487              	.LVL35:
 103:oscillator.cpp ****     pitch2 = 1.0f - hw.adc.GetFloat(4);   // OSC2 pitch
 488              		.loc 7 103 37 view .LVU137
 489 0046 0321     		movs	r1, #3
 490 0048 6048     		ldr	r0, .L43
 100:oscillator.cpp **** 
 491              		.loc 7 100 13 view .LVU138
ARM GAS  /tmp/ccAKQp7X.s 			page 24


 492 004a 8BED000A 		vstr.32	s0, [fp]
 103:oscillator.cpp ****     pitch2 = 1.0f - hw.adc.GetFloat(4);   // OSC2 pitch
 493              		.loc 7 103 5 is_stmt 1 view .LVU139
 103:oscillator.cpp ****     pitch2 = 1.0f - hw.adc.GetFloat(4);   // OSC2 pitch
 494              		.loc 7 103 37 is_stmt 0 view .LVU140
 495 004e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 496              	.LVL36:
 103:oscillator.cpp ****     pitch2 = 1.0f - hw.adc.GetFloat(4);   // OSC2 pitch
 497              		.loc 7 103 20 view .LVU141
 498 0052 38EE400A 		vsub.f32	s0, s16, s0
 104:oscillator.cpp ****     pulseW2 = 1.0f - hw.adc.GetFloat(5);  // OSC2 pulse width
 499              		.loc 7 104 36 view .LVU142
 500 0056 0421     		movs	r1, #4
 501 0058 5C48     		ldr	r0, .L43
 103:oscillator.cpp ****     pitch2 = 1.0f - hw.adc.GetFloat(4);   // OSC2 pitch
 502              		.loc 7 103 13 view .LVU143
 503 005a 88ED000A 		vstr.32	s0, [r8]
 104:oscillator.cpp ****     pulseW2 = 1.0f - hw.adc.GetFloat(5);  // OSC2 pulse width
 504              		.loc 7 104 5 is_stmt 1 view .LVU144
 104:oscillator.cpp ****     pulseW2 = 1.0f - hw.adc.GetFloat(5);  // OSC2 pulse width
 505              		.loc 7 104 36 is_stmt 0 view .LVU145
 506 005e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 507              	.LVL37:
 104:oscillator.cpp ****     pulseW2 = 1.0f - hw.adc.GetFloat(5);  // OSC2 pulse width
 508              		.loc 7 104 19 view .LVU146
 509 0062 38EE400A 		vsub.f32	s0, s16, s0
 510              		.loc 7 105 37 view .LVU147
 511 0066 0521     		movs	r1, #5
 512 0068 5848     		ldr	r0, .L43
 104:oscillator.cpp ****     pulseW2 = 1.0f - hw.adc.GetFloat(5);  // OSC2 pulse width
 513              		.loc 7 104 12 view .LVU148
 514 006a 84ED000A 		vstr.32	s0, [r4]
 515              		.loc 7 105 5 is_stmt 1 view .LVU149
 516              		.loc 7 105 37 is_stmt 0 view .LVU150
 517 006e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 518              	.LVL38:
 519              		.loc 7 105 20 view .LVU151
 520 0072 38EE400A 		vsub.f32	s0, s16, s0
 106:oscillator.cpp ****     
 107:oscillator.cpp ****     // Key control
 108:oscillator.cpp ****     keyPot = hw.adc.GetFloat(6);
 521              		.loc 7 108 29 view .LVU152
 522 0076 5548     		ldr	r0, .L43
 523 0078 0621     		movs	r1, #6
 105:oscillator.cpp ****     
 524              		.loc 7 105 13 view .LVU153
 525 007a 89ED000A 		vstr.32	s0, [r9]
 526              		.loc 7 108 5 is_stmt 1 view .LVU154
 527              		.loc 7 108 29 is_stmt 0 view .LVU155
 528 007e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 529              	.LVL39:
 530              	.LBB210:
 109:oscillator.cpp ****     int root = static_cast<int>(keyPot * 11.99f);  // 0-11 (C to B)
 110:oscillator.cpp **** 
 111:oscillator.cpp ****     // Configure oscillator frequencies
 112:oscillator.cpp ****     float freq1, freq2;
 113:oscillator.cpp ****     
ARM GAS  /tmp/ccAKQp7X.s 			page 25


 114:oscillator.cpp ****     if (quantizeMode == OFF) {
 531              		.loc 7 114 22 view .LVU156
 532 0082 554B     		ldr	r3, .L43+12
 533              	.LBE210:
 108:oscillator.cpp ****     int root = static_cast<int>(keyPot * 11.99f);  // 0-11 (C to B)
 534              		.loc 7 108 12 view .LVU157
 535 0084 554A     		ldr	r2, .L43+16
 536              	.LBB215:
 537              		.loc 7 114 22 view .LVU158
 538 0086 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 539              	.LBE215:
 108:oscillator.cpp ****     int root = static_cast<int>(keyPot * 11.99f);  // 0-11 (C to B)
 540              		.loc 7 108 12 view .LVU159
 541 0088 82ED000A 		vstr.32	s0, [r2]
 109:oscillator.cpp ****     int root = static_cast<int>(keyPot * 11.99f);  // 0-11 (C to B)
 542              		.loc 7 109 5 is_stmt 1 view .LVU160
 543              	.LVL40:
 112:oscillator.cpp ****     
 544              		.loc 7 112 5 view .LVU161
 545              		.loc 7 114 5 view .LVU162
 546              	.LBB216:
 547 008c 0028     		cmp	r0, #0
 548 008e 59D1     		bne	.L26
 115:oscillator.cpp ****         freq1 = 50.f + (pitch1 * 1950.f);
 549              		.loc 7 115 9 view .LVU163
 550              		.loc 7 115 15 is_stmt 0 view .LVU164
 551 0090 9FED538A 		vldr.32	s16, .L43+20
 552 0094 DFED537A 		vldr.32	s15, .L43+24
 553 0098 F0EE488A 		vmov.f32	s17, s16
 554 009c D7ED006A 		vldr.32	s13, [r7]
 116:oscillator.cpp ****         freq2 = 50.f + (pitch2 * 1950.f);
 555              		.loc 7 116 15 view .LVU165
 556 00a0 94ED007A 		vldr.32	s14, [r4]
 115:oscillator.cpp ****         freq1 = 50.f + (pitch1 * 1950.f);
 557              		.loc 7 115 15 view .LVU166
 558 00a4 E6EEA78A 		vfma.f32	s17, s13, s15
 559              	.LVL41:
 560              		.loc 7 116 9 is_stmt 1 view .LVU167
 561              		.loc 7 116 15 is_stmt 0 view .LVU168
 562 00a8 A7EE278A 		vfma.f32	s16, s14, s15
 563              	.LVL42:
 564              	.L27:
 565              		.loc 7 116 15 view .LVU169
 566              	.LBE216:
 117:oscillator.cpp ****     } else {
 118:oscillator.cpp ****         // When scale lock is enabled, both oscillators use OSC1's pitch position
 119:oscillator.cpp ****         // but maintain their relative offsets
 120:oscillator.cpp ****         if (scaleLockEnabled && quantizeMode != CHROMATIC) {
 121:oscillator.cpp ****             // Calculate base pitch position
 122:oscillator.cpp ****             float basePitch = (pitch1 + pitch2) / 2.0f;
 123:oscillator.cpp ****             
 124:oscillator.cpp ****             // Apply OSC1 and OSC2 as offsets from the base
 125:oscillator.cpp ****             freq1 = QuantizePitch(basePitch + (pitch1 - 0.5f) * 0.1f, quantizeMode, root);
 126:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 127:oscillator.cpp ****         } else {
 128:oscillator.cpp ****             // Standard independent quantization
 129:oscillator.cpp ****             freq1 = QuantizePitch(pitch1, quantizeMode, root);
ARM GAS  /tmp/ccAKQp7X.s 			page 26


 130:oscillator.cpp ****             freq2 = QuantizePitch(pitch2, quantizeMode, root);
 131:oscillator.cpp ****         }
 132:oscillator.cpp ****     }
 133:oscillator.cpp ****     
 134:oscillator.cpp ****     osc1.SetFreq(freq1);
 567              		.loc 7 134 5 is_stmt 1 view .LVU170
 568              	.LBB217:
 569              	.LBI217:
  25:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../../DaisySP/Source/Synthesis/oscillator.h ****     */
  27:../../../DaisySP/Source/Synthesis/oscillator.h ****     enum
  28:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
  29:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../../DaisySP/Source/Synthesis/oscillator.h ****     };
  39:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  40:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  41:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  43:../../../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  45:../../../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  46:../../../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../../DaisySP/Source/Synthesis/oscillator.h ****     */
  50:../../../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
  52:../../../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  56:../../../DaisySP/Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  62:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
 570              		.loc 1 67 17 view .LVU171
 571              	.LBB218:
  68:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
  69:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 572              		.loc 1 69 9 view .LVU172
 573              		.loc 1 69 20 is_stmt 0 view .LVU173
ARM GAS  /tmp/ccAKQp7X.s 			page 27


 574 00ac 4E4F     		ldr	r7, .L43+28
  70:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 575              		.loc 1 70 34 view .LVU174
 576 00ae B0EE680A 		vmov.f32	s0, s17
 577              	.LBE218:
 578              	.LBE217:
 579              	.LBB221:
 580              	.LBB222:
  69:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 581              		.loc 1 69 20 view .LVU175
 582 00b2 4E4C     		ldr	r4, .L43+32
 583              	.LBE222:
 584              	.LBE221:
 585              	.LBB227:
 586              	.LBB228:
 587              	.LBB229:
 588              	.LBB230:
 589              	.LBB231:
 590              		.file 9 "../../../DaisySP/Source/Utility/dsp.h"
   1:../../../DaisySP/Source/Utility/dsp.h **** /*
   2:../../../DaisySP/Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../../DaisySP/Source/Utility/dsp.h **** 
   4:../../../DaisySP/Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../../../DaisySP/Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../../../DaisySP/Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../../../DaisySP/Source/Utility/dsp.h **** */
   8:../../../DaisySP/Source/Utility/dsp.h **** 
   9:../../../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../../../DaisySP/Source/Utility/dsp.h **** */
  11:../../../DaisySP/Source/Utility/dsp.h **** #pragma once
  12:../../../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../../../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../../../DaisySP/Source/Utility/dsp.h **** #include <cassert>
  15:../../../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
  16:../../../DaisySP/Source/Utility/dsp.h **** #include <random>
  17:../../../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  18:../../../DaisySP/Source/Utility/dsp.h **** 
  19:../../../DaisySP/Source/Utility/dsp.h **** /** PIs
  20:../../../DaisySP/Source/Utility/dsp.h **** */
  21:../../../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../../../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../../../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../../../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../../../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../../../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../../../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../../../DaisySP/Source/Utility/dsp.h **** 
  29:../../../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  30:../../../DaisySP/Source/Utility/dsp.h **** {
  31:../../../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../../../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../../../DaisySP/Source/Utility/dsp.h **** 
  34:../../../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../../../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../../../DaisySP/Source/Utility/dsp.h **** 
  37:../../../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../../../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
ARM GAS  /tmp/ccAKQp7X.s 			page 28


  39:../../../DaisySP/Source/Utility/dsp.h **** */
  40:../../../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../../../DaisySP/Source/Utility/dsp.h **** {
  42:../../../DaisySP/Source/Utility/dsp.h ****     float r;
  43:../../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  44:../../../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  45:../../../DaisySP/Source/Utility/dsp.h **** #else
  46:../../../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:../../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  48:../../../DaisySP/Source/Utility/dsp.h ****     return r;
  49:../../../DaisySP/Source/Utility/dsp.h **** }
  50:../../../DaisySP/Source/Utility/dsp.h **** 
  51:../../../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../../../DaisySP/Source/Utility/dsp.h **** {
  53:../../../DaisySP/Source/Utility/dsp.h ****     float r;
  54:../../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  55:../../../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 591              		.loc 9 55 5 view .LVU176
 592 00b4 B7EE009A 		vmov.f32	s18, #1.0e+0
 593              	.LBE231:
 594              	.LBE230:
 595              	.LBE229:
 596              	.LBE228:
 597              	.LBE227:
 598              	.LBB248:
 599              	.LBB219:
 600              		.loc 1 70 34 view .LVU177
 601 00b8 3846     		mov	r0, r7
  69:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 602              		.loc 1 69 20 view .LVU178
 603 00ba C7ED028A 		vstr.32	s17, [r7, #8]
 604              		.loc 1 70 9 is_stmt 1 view .LVU179
 605              		.loc 1 70 34 is_stmt 0 view .LVU180
 606 00be FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 607              	.LVL43:
 608              	.LBE219:
 609              	.LBE248:
 610              	.LBB249:
 611              	.LBB250:
  71:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
  72:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  73:../../../DaisySP/Source/Synthesis/oscillator.h **** 
  74:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../../DaisySP/Source/Synthesis/oscillator.h ****     */
  76:../../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
 612              		.loc 1 76 46 view .LVU181
 613 00c2 DAF80030 		ldr	r3, [r10]	@ float
 614              	.LBE250:
 615              	.LBE249:
 616              	.LBB253:
 617              	.LBB220:
  70:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 618              		.loc 1 70 20 view .LVU182
 619 00c6 87ED070A 		vstr.32	s0, [r7, #28]
 620              	.LVL44:
  70:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 621              		.loc 1 70 20 view .LVU183
ARM GAS  /tmp/ccAKQp7X.s 			page 29


 622              	.LBE220:
 623              	.LBE253:
 135:oscillator.cpp ****     osc1.SetAmp(volume1);
 624              		.loc 7 135 5 is_stmt 1 view .LVU184
 625              	.LBB254:
 626              	.LBI249:
 627              		.loc 1 76 17 view .LVU185
 628              	.LBB251:
 629              		.loc 1 76 41 view .LVU186
 630              	.LBE251:
 631              	.LBE254:
 632              	.LBB255:
 633              	.LBB223:
  70:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 634              		.loc 1 70 34 is_stmt 0 view .LVU187
 635 00ca 2046     		mov	r0, r4
 636 00cc B0EE480A 		vmov.f32	s0, s16
 637              	.LBE223:
 638              	.LBE255:
 639              	.LBB256:
 640              	.LBB244:
 641              	.LBB240:
 642              	.LBB234:
 643              	.LBB235:
  44:../../../DaisySP/Source/Utility/dsp.h **** #else
 644              		.loc 9 44 5 view .LVU188
 645 00d0 DFED479A 		vldr.32	s19, .L43+36
 646 00d4 DBED007A 		vldr.32	s15, [fp]
 647              	.LBE235:
 648              	.LBE234:
 649              	.LBE240:
 650              	.LBE244:
 651              	.LBE256:
 652              	.LBB257:
 653              	.LBB252:
 654              		.loc 1 76 46 view .LVU189
 655 00d8 7B60     		str	r3, [r7, #4]	@ float
 656              	.LVL45:
 657              		.loc 1 76 46 view .LVU190
 658              	.LBE252:
 659              	.LBE257:
 136:oscillator.cpp ****     osc1.SetPw(pulseW1);
 660              		.loc 7 136 5 is_stmt 1 view .LVU191
 661              	.LBB258:
 662              	.LBI227:
  77:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../../DaisySP/Source/Synthesis/oscillator.h ****     */
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
  83:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
  84:../../../DaisySP/Source/Synthesis/oscillator.h ****      */
  85:../../../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetPw(const float pw) { pw_ = fclamp(pw, 0.0f, 1.0f); }
 663              		.loc 1 85 17 view .LVU192
 664              	.LBB245:
 665              		.loc 1 85 41 view .LVU193
ARM GAS  /tmp/ccAKQp7X.s 			page 30


 666              	.LBB241:
 667              	.LBI229:
  56:../../../DaisySP/Source/Utility/dsp.h **** #else
  57:../../../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  59:../../../DaisySP/Source/Utility/dsp.h ****     return r;
  60:../../../DaisySP/Source/Utility/dsp.h **** }
  61:../../../DaisySP/Source/Utility/dsp.h **** 
  62:../../../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  63:../../../DaisySP/Source/Utility/dsp.h **** */
  64:../../../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
 668              		.loc 9 64 14 view .LVU194
 669              	.LBE241:
 670              	.LBE245:
 671              	.LBE258:
  65:../../../DaisySP/Source/Utility/dsp.h **** {
  66:../../../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
 672              		.loc 9 66 5 view .LVU195
 673              	.LBB259:
 674              	.LBB246:
 675              	.LBB242:
 676              	.LBB237:
 677              	.LBI234:
  40:../../../DaisySP/Source/Utility/dsp.h **** {
 678              		.loc 9 40 14 view .LVU196
 679              	.LBB236:
  42:../../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
 680              		.loc 9 42 5 view .LVU197
  44:../../../DaisySP/Source/Utility/dsp.h **** #else
 681              		.loc 9 44 5 view .LVU198
 682              		.syntax unified
 683              	@ 44 "../../../DaisySP/Source/Utility/dsp.h" 1
 684 00da C7FEA97A 		vmaxnm.f32 s15, s15, s19
 685              	@ 0 "" 2
 686              	.LVL46:
  48:../../../DaisySP/Source/Utility/dsp.h **** }
 687              		.loc 9 48 5 view .LVU199
  48:../../../DaisySP/Source/Utility/dsp.h **** }
 688              		.loc 9 48 5 is_stmt 0 view .LVU200
 689              		.thumb
 690              		.syntax unified
 691              	.LBE236:
 692              	.LBE237:
 693              	.LBB238:
 694              	.LBI230:
  51:../../../DaisySP/Source/Utility/dsp.h **** {
 695              		.loc 9 51 14 is_stmt 1 view .LVU201
 696              	.LBB232:
  53:../../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
 697              		.loc 9 53 5 view .LVU202
  55:../../../DaisySP/Source/Utility/dsp.h **** #else
 698              		.loc 9 55 5 view .LVU203
 699              	.LBE232:
 700              	.LBE238:
 701              	.LBE242:
 702              	.LBE246:
 703              	.LBE259:
ARM GAS  /tmp/ccAKQp7X.s 			page 31


 704              	.LBB260:
 705              	.LBB224:
  69:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 706              		.loc 1 69 20 is_stmt 0 view .LVU204
 707 00de 84ED028A 		vstr.32	s16, [r4, #8]
 708              	.LBE224:
 709              	.LBE260:
 710              	.LBB261:
 711              	.LBB247:
 712              	.LBB243:
 713              	.LBB239:
 714              	.LBB233:
  55:../../../DaisySP/Source/Utility/dsp.h **** #else
 715              		.loc 9 55 5 view .LVU205
 716              		.syntax unified
 717              	@ 55 "../../../DaisySP/Source/Utility/dsp.h" 1
 718 00e2 C7FEC97A 		vminnm.f32 s15, s15, s18
 719              	@ 0 "" 2
 720              	.LVL47:
  59:../../../DaisySP/Source/Utility/dsp.h **** }
 721              		.loc 9 59 5 is_stmt 1 view .LVU206
  59:../../../DaisySP/Source/Utility/dsp.h **** }
 722              		.loc 9 59 5 is_stmt 0 view .LVU207
 723              		.thumb
 724              		.syntax unified
 725              	.LBE233:
 726              	.LBE239:
 727              	.LBE243:
 728              		.loc 1 85 45 view .LVU208
 729 00e6 C7ED037A 		vstr.32	s15, [r7, #12]
 730              	.LVL48:
 731              		.loc 1 85 45 view .LVU209
 732              	.LBE247:
 733              	.LBE261:
 137:oscillator.cpp **** 
 138:oscillator.cpp ****     osc2.SetFreq(freq2);
 734              		.loc 7 138 5 is_stmt 1 view .LVU210
 735              	.LBB262:
 736              	.LBI221:
  67:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 737              		.loc 1 67 17 view .LVU211
 738              	.LBB225:
  69:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 739              		.loc 1 69 9 view .LVU212
  70:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 740              		.loc 1 70 9 view .LVU213
  70:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 741              		.loc 1 70 34 is_stmt 0 view .LVU214
 742 00ea FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 743              	.LVL49:
 744              	.LBE225:
 745              	.LBE262:
 746              	.LBB263:
 747              	.LBB264:
  76:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 748              		.loc 1 76 46 view .LVU215
 749 00ee D8F80030 		ldr	r3, [r8]	@ float
ARM GAS  /tmp/ccAKQp7X.s 			page 32


 750              	.LBE264:
 751              	.LBE263:
 752              	.LBB267:
 753              	.LBB268:
 754              	.LBB269:
 755              	.LBB270:
 756              	.LBB271:
  44:../../../DaisySP/Source/Utility/dsp.h **** #else
 757              		.loc 9 44 5 view .LVU216
 758 00f2 D9ED007A 		vldr.32	s15, [r9]
 759              	.LBE271:
 760              	.LBE270:
 761              	.LBE269:
 762              	.LBE268:
 763              	.LBE267:
 764              	.LBB284:
 765              	.LBB226:
  70:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 766              		.loc 1 70 20 view .LVU217
 767 00f6 84ED070A 		vstr.32	s0, [r4, #28]
 768              	.LVL50:
  70:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 769              		.loc 1 70 20 view .LVU218
 770              	.LBE226:
 771              	.LBE284:
 139:oscillator.cpp ****     osc2.SetAmp(volume2);
 772              		.loc 7 139 5 is_stmt 1 view .LVU219
 773              	.LBB285:
 774              	.LBI263:
  76:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 775              		.loc 1 76 17 view .LVU220
 776              	.LBB265:
  76:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 777              		.loc 1 76 41 view .LVU221
 778              	.LBE265:
 779              	.LBE285:
 780              	.LBB286:
 781              	.LBB281:
 782              	.LBB278:
 783              	.LBB274:
 784              	.LBB272:
  44:../../../DaisySP/Source/Utility/dsp.h **** #else
 785              		.loc 9 44 5 is_stmt 0 view .LVU222
 786              		.syntax unified
 787              	@ 44 "../../../DaisySP/Source/Utility/dsp.h" 1
 788 00fa C7FEA97A 		vmaxnm.f32 s15, s15, s19
 789              	@ 0 "" 2
 790              		.thumb
 791              		.syntax unified
 792              	.LBE272:
 793              	.LBE274:
 794              	.LBE278:
 795              	.LBE281:
 796              	.LBE286:
 797              	.LBB287:
 798              	.LBB266:
  76:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
ARM GAS  /tmp/ccAKQp7X.s 			page 33


 799              		.loc 1 76 46 view .LVU223
 800 00fe 6360     		str	r3, [r4, #4]	@ float
 801              	.LVL51:
  76:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 802              		.loc 1 76 46 view .LVU224
 803              	.LBE266:
 804              	.LBE287:
 140:oscillator.cpp ****     osc2.SetPw(pulseW2);
 805              		.loc 7 140 5 is_stmt 1 view .LVU225
 806              	.LBB288:
 807              	.LBI267:
 808              		.loc 1 85 17 view .LVU226
 809              	.LBB282:
 810              		.loc 1 85 41 view .LVU227
 811              	.LBB279:
 812              	.LBI269:
  64:../../../DaisySP/Source/Utility/dsp.h **** {
 813              		.loc 9 64 14 view .LVU228
 814              	.LBE279:
 815              	.LBE282:
 816              	.LBE288:
 817              		.loc 9 66 5 view .LVU229
 818              	.LBB289:
 819              	.LBB283:
 820              	.LBB280:
 821              	.LBB275:
 822              	.LBI270:
  40:../../../DaisySP/Source/Utility/dsp.h **** {
 823              		.loc 9 40 14 view .LVU230
 824              	.LBB273:
  42:../../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
 825              		.loc 9 42 5 view .LVU231
  44:../../../DaisySP/Source/Utility/dsp.h **** #else
 826              		.loc 9 44 5 view .LVU232
  48:../../../DaisySP/Source/Utility/dsp.h **** }
 827              		.loc 9 48 5 view .LVU233
  48:../../../DaisySP/Source/Utility/dsp.h **** }
 828              		.loc 9 48 5 is_stmt 0 view .LVU234
 829              	.LBE273:
 830              	.LBE275:
 831              	.LBB276:
 832              	.LBI276:
  51:../../../DaisySP/Source/Utility/dsp.h **** {
 833              		.loc 9 51 14 is_stmt 1 view .LVU235
 834              	.LBB277:
  53:../../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
 835              		.loc 9 53 5 view .LVU236
  55:../../../DaisySP/Source/Utility/dsp.h **** #else
 836              		.loc 9 55 5 view .LVU237
 837              		.syntax unified
 838              	@ 55 "../../../DaisySP/Source/Utility/dsp.h" 1
 839 0100 C7FEC97A 		vminnm.f32 s15, s15, s18
 840              	@ 0 "" 2
 841              	.LVL52:
  59:../../../DaisySP/Source/Utility/dsp.h **** }
 842              		.loc 9 59 5 view .LVU238
  59:../../../DaisySP/Source/Utility/dsp.h **** }
ARM GAS  /tmp/ccAKQp7X.s 			page 34


 843              		.loc 9 59 5 is_stmt 0 view .LVU239
 844              		.thumb
 845              		.syntax unified
 846              	.LBE277:
 847              	.LBE276:
 848              	.LBE280:
 849              		.loc 1 85 45 view .LVU240
 850 0104 C4ED037A 		vstr.32	s15, [r4, #12]
 851              	.LVL53:
 852              		.loc 1 85 45 view .LVU241
 853              	.LBE283:
 854              	.LBE289:
 141:oscillator.cpp **** 
 142:oscillator.cpp ****     for(size_t i = 0; i < size; i++)
 855              		.loc 7 142 5 is_stmt 1 view .LVU242
 856              	.LBB290:
 857              		.loc 7 142 25 view .LVU243
 858 0108 BEB1     		cbz	r6, .L25
 859              		.loc 7 142 16 is_stmt 0 view .LVU244
 860 010a 0024     		movs	r4, #0
 861              	.LVL54:
 862              	.L30:
 863              	.LBB291:
 143:oscillator.cpp ****     {
 144:oscillator.cpp ****         float sig1 = osc1.Process();
 864              		.loc 7 144 9 is_stmt 1 discriminator 2 view .LVU245
 865              		.loc 7 144 34 is_stmt 0 discriminator 2 view .LVU246
 866 010c 3648     		ldr	r0, .L43+28
 867 010e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 868              	.LVL55:
 145:oscillator.cpp ****         float sig2 = osc2.Process();
 869              		.loc 7 145 34 discriminator 2 view .LVU247
 870 0112 3648     		ldr	r0, .L43+32
 144:oscillator.cpp ****         float sig2 = osc2.Process();
 871              		.loc 7 144 34 discriminator 2 view .LVU248
 872 0114 B0EE408A 		vmov.f32	s16, s0
 873              	.LVL56:
 874              		.loc 7 145 9 is_stmt 1 discriminator 2 view .LVU249
 875              		.loc 7 145 34 is_stmt 0 discriminator 2 view .LVU250
 876 0118 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 877              	.LVL57:
 146:oscillator.cpp ****         out[0][i] = sig1 + sig2;
 878              		.loc 7 146 9 is_stmt 1 discriminator 2 view .LVU251
 147:oscillator.cpp ****         out[1][i] = sig1 + sig2;
 879              		.loc 7 147 19 is_stmt 0 discriminator 2 view .LVU252
 880 011c D5E90003 		ldrd	r0, r3, [r5]
 146:oscillator.cpp ****         out[0][i] = sig1 + sig2;
 881              		.loc 7 146 26 discriminator 2 view .LVU253
 882 0120 38EE000A 		vadd.f32	s0, s16, s0
 883              	.LVL58:
 146:oscillator.cpp ****         out[0][i] = sig1 + sig2;
 884              		.loc 7 146 19 discriminator 2 view .LVU254
 885 0124 00EB8400 		add	r0, r0, r4, lsl #2
 886              		.loc 7 147 19 discriminator 2 view .LVU255
 887 0128 03EB8403 		add	r3, r3, r4, lsl #2
 888              	.LBE291:
 142:oscillator.cpp ****     {
ARM GAS  /tmp/ccAKQp7X.s 			page 35


 889              		.loc 7 142 5 discriminator 2 view .LVU256
 890 012c 0134     		adds	r4, r4, #1
 891              	.LVL59:
 892              	.LBB292:
 146:oscillator.cpp ****         out[0][i] = sig1 + sig2;
 893              		.loc 7 146 19 discriminator 2 view .LVU257
 894 012e 80ED000A 		vstr.32	s0, [r0]
 895              		.loc 7 147 9 is_stmt 1 discriminator 2 view .LVU258
 896              	.LBE292:
 142:oscillator.cpp ****     {
 897              		.loc 7 142 25 is_stmt 0 discriminator 2 view .LVU259
 898 0132 A642     		cmp	r6, r4
 899              	.LBB293:
 900              		.loc 7 147 19 discriminator 2 view .LVU260
 901 0134 83ED000A 		vstr.32	s0, [r3]
 902              	.LBE293:
 142:oscillator.cpp ****     {
 903              		.loc 7 142 5 is_stmt 1 discriminator 2 view .LVU261
 904              	.LVL60:
 142:oscillator.cpp ****     {
 905              		.loc 7 142 25 discriminator 2 view .LVU262
 906 0138 E8D1     		bne	.L30
 907              	.LVL61:
 908              	.L25:
 142:oscillator.cpp ****     {
 909              		.loc 7 142 25 is_stmt 0 discriminator 2 view .LVU263
 910              	.LBE290:
 148:oscillator.cpp ****     }
 149:oscillator.cpp **** }
 911              		.loc 7 149 1 view .LVU264
 912 013a 03B0     		add	sp, sp, #12
 913              		.cfi_remember_state
 914              		.cfi_def_cfa_offset 52
 915              		@ sp needed
 916 013c BDEC048B 		vldm	sp!, {d8-d9}
 917              		.cfi_restore 82
 918              		.cfi_restore 83
 919              		.cfi_restore 80
 920              		.cfi_restore 81
 921              		.cfi_def_cfa_offset 36
 922 0140 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 923              	.LVL62:
 924              	.L26:
 925              		.cfi_restore_state
 109:oscillator.cpp **** 
 926              		.loc 7 109 40 view .LVU265
 927 0144 DFED2B7A 		vldr.32	s15, .L43+40
 928              	.LBB294:
 929              	.LBB211:
 120:oscillator.cpp ****             // Calculate base pitch position
 930              		.loc 7 120 9 view .LVU266
 931 0148 2B4A     		ldr	r2, .L43+44
 932              	.LBE211:
 933              	.LBE294:
 109:oscillator.cpp **** 
 934              		.loc 7 109 40 view .LVU267
 935 014a 20EE270A 		vmul.f32	s0, s0, s15
ARM GAS  /tmp/ccAKQp7X.s 			page 36


 936              	.LVL63:
 937              	.LBB295:
 938              	.LBB213:
 120:oscillator.cpp ****             // Calculate base pitch position
 939              		.loc 7 120 30 view .LVU268
 940 014e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 941              	.LBE213:
 942              	.LBE295:
 109:oscillator.cpp **** 
 943              		.loc 7 109 9 view .LVU269
 944 0150 FDEEC07A 		vcvt.s32.f32	s15, s0
 945 0154 17EE901A 		vmov	r1, s15	@ int
 120:oscillator.cpp ****             // Calculate base pitch position
 946              		.loc 7 120 9 is_stmt 1 view .LVU270
 947              	.LBB296:
 948              	.LBB214:
 120:oscillator.cpp ****             // Calculate base pitch position
 949              		.loc 7 120 30 is_stmt 0 view .LVU271
 950 0158 0AB1     		cbz	r2, .L28
 951 015a 0128     		cmp	r0, #1
 952 015c 10D1     		bne	.L42
 953              	.L28:
 129:oscillator.cpp ****             freq2 = QuantizePitch(pitch2, quantizeMode, root);
 954              		.loc 7 129 13 is_stmt 1 view .LVU272
 129:oscillator.cpp ****             freq2 = QuantizePitch(pitch2, quantizeMode, root);
 955              		.loc 7 129 34 is_stmt 0 view .LVU273
 956 015e 97ED000A 		vldr.32	s0, [r7]
 957 0162 0191     		str	r1, [sp, #4]
 958 0164 FFF7FEFF 		bl	_Z13QuantizePitchf9QuantModei
 959              	.LVL64:
 130:oscillator.cpp ****         }
 960              		.loc 7 130 34 view .LVU274
 961 0168 1B4B     		ldr	r3, .L43+12
 129:oscillator.cpp ****             freq2 = QuantizePitch(pitch2, quantizeMode, root);
 962              		.loc 7 129 34 view .LVU275
 963 016a F0EE408A 		vmov.f32	s17, s0
 130:oscillator.cpp ****         }
 964              		.loc 7 130 34 view .LVU276
 965 016e 0199     		ldr	r1, [sp, #4]
 966 0170 94ED000A 		vldr.32	s0, [r4]
 967              	.LVL65:
 130:oscillator.cpp ****         }
 968              		.loc 7 130 13 is_stmt 1 view .LVU277
 130:oscillator.cpp ****         }
 969              		.loc 7 130 34 is_stmt 0 view .LVU278
 970 0174 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 971 0176 FFF7FEFF 		bl	_Z13QuantizePitchf9QuantModei
 972              	.LVL66:
 973 017a B0EE408A 		vmov.f32	s16, s0
 974              	.LVL67:
 130:oscillator.cpp ****         }
 975              		.loc 7 130 34 view .LVU279
 976 017e 95E7     		b	.L27
 977              	.LVL68:
 978              	.L42:
 979              	.LBB212:
 122:oscillator.cpp ****             
ARM GAS  /tmp/ccAKQp7X.s 			page 37


 980              		.loc 7 122 13 is_stmt 1 view .LVU280
 125:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 981              		.loc 7 125 55 is_stmt 0 view .LVU281
 982 0180 B6EE009A 		vmov.f32	s18, #5.0e-1
 122:oscillator.cpp ****             
 983              		.loc 7 122 39 view .LVU282
 984 0184 97ED008A 		vldr.32	s16, [r7]
 985 0188 D4ED007A 		vldr.32	s15, [r4]
 125:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 986              		.loc 7 125 63 view .LVU283
 987 018c DFED1B9A 		vldr.32	s19, .L43+48
 125:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 988              		.loc 7 125 55 view .LVU284
 989 0190 38EE490A 		vsub.f32	s0, s16, s18
 125:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 990              		.loc 7 125 34 view .LVU285
 991 0194 0191     		str	r1, [sp, #4]
 122:oscillator.cpp ****             
 992              		.loc 7 122 39 view .LVU286
 993 0196 38EE278A 		vadd.f32	s16, s16, s15
 994              	.LVL69:
 125:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 995              		.loc 7 125 13 is_stmt 1 view .LVU287
 125:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 996              		.loc 7 125 63 is_stmt 0 view .LVU288
 997 019a 20EE290A 		vmul.f32	s0, s0, s19
 125:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 998              		.loc 7 125 34 view .LVU289
 999 019e A8EE090A 		vfma.f32	s0, s16, s18
 1000 01a2 FFF7FEFF 		bl	_Z13QuantizePitchf9QuantModei
 1001              	.LVL70:
 126:oscillator.cpp ****         } else {
 1002              		.loc 7 126 55 view .LVU290
 1003 01a6 D4ED007A 		vldr.32	s15, [r4]
 125:oscillator.cpp ****             freq2 = QuantizePitch(basePitch + (pitch2 - 0.5f) * 0.1f, quantizeMode, root);
 1004              		.loc 7 125 34 view .LVU291
 1005 01aa F0EE408A 		vmov.f32	s17, s0
 1006              	.LVL71:
 126:oscillator.cpp ****         } else {
 1007              		.loc 7 126 13 is_stmt 1 view .LVU292
 126:oscillator.cpp ****         } else {
 1008              		.loc 7 126 34 is_stmt 0 view .LVU293
 1009 01ae 0A4B     		ldr	r3, .L43+12
 126:oscillator.cpp ****         } else {
 1010              		.loc 7 126 55 view .LVU294
 1011 01b0 77EEC97A 		vsub.f32	s15, s15, s18
 126:oscillator.cpp ****         } else {
 1012              		.loc 7 126 34 view .LVU295
 1013 01b4 0199     		ldr	r1, [sp, #4]
 1014 01b6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 126:oscillator.cpp ****         } else {
 1015              		.loc 7 126 63 view .LVU296
 1016 01b8 27EEA90A 		vmul.f32	s0, s15, s19
 1017              	.LVL72:
 126:oscillator.cpp ****         } else {
 1018              		.loc 7 126 34 view .LVU297
 1019 01bc A8EE090A 		vfma.f32	s0, s16, s18
ARM GAS  /tmp/ccAKQp7X.s 			page 38


 1020 01c0 FFF7FEFF 		bl	_Z13QuantizePitchf9QuantModei
 1021              	.LVL73:
 1022 01c4 B0EE408A 		vmov.f32	s16, s0
 1023              	.LVL74:
 126:oscillator.cpp ****         } else {
 1024              		.loc 7 126 34 view .LVU298
 1025              	.LBE212:
 126:oscillator.cpp ****         } else {
 1026              		.loc 7 126 90 view .LVU299
 1027 01c8 70E7     		b	.L27
 1028              	.L44:
 1029 01ca 00BF     		.align	2
 1030              	.L43:
 1031 01cc 18000000 		.word	.LANCHOR1+24
 1032 01d0 00000000 		.word	.LANCHOR3
 1033 01d4 00000000 		.word	.LANCHOR6
 1034 01d8 00000000 		.word	.LANCHOR9
 1035 01dc 00000000 		.word	.LANCHOR8
 1036 01e0 00004842 		.word	1112014848
 1037 01e4 00C0F344 		.word	1156825088
 1038 01e8 00000000 		.word	.LANCHOR11
 1039 01ec 00000000 		.word	.LANCHOR12
 1040 01f0 00000000 		.word	0
 1041 01f4 0AD73F41 		.word	1094702858
 1042 01f8 00000000 		.word	.LANCHOR10
 1043 01fc CDCCCC3D 		.word	1036831949
 1044 0200 00000000 		.word	.LANCHOR2
 1045 0204 00000000 		.word	.LANCHOR4
 1046 0208 00000000 		.word	.LANCHOR5
 1047 020c 00000000 		.word	.LANCHOR7
 1048              	.LBE214:
 1049              	.LBE296:
 1050              		.cfi_endproc
 1051              	.LFE4682:
 1053              		.section	.text._Z15UpdateWaveform1v,"ax",%progbits
 1054              		.align	1
 1055              		.p2align 2,,3
 1056              		.global	_Z15UpdateWaveform1v
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1060              		.fpu fpv5-d16
 1062              	_Z15UpdateWaveform1v:
 1063              	.LFB4683:
 150:oscillator.cpp **** 
 151:oscillator.cpp **** void UpdateWaveform1()
 152:oscillator.cpp **** {
 1064              		.loc 7 152 1 is_stmt 1 view -0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 0, uses_anonymous_args = 0
 1068              		@ link register save eliminated.
 153:oscillator.cpp ****     currentWaveform1 = (currentWaveform1 + 1) % 3;
 1069              		.loc 7 153 5 view .LVU301
 1070              		.loc 7 153 42 is_stmt 0 view .LVU302
 1071 0000 0E49     		ldr	r1, .L50
 1072              		.loc 7 153 47 view .LVU303
ARM GAS  /tmp/ccAKQp7X.s 			page 39


 1073 0002 0F4B     		ldr	r3, .L50+4
 1074              		.loc 7 153 42 view .LVU304
 1075 0004 0A68     		ldr	r2, [r1]
 1076 0006 0132     		adds	r2, r2, #1
 1077              		.loc 7 153 47 view .LVU305
 1078 0008 83FB0203 		smull	r0, r3, r3, r2
 1079 000c A3EBE273 		sub	r3, r3, r2, asr #31
 1080 0010 03EB4303 		add	r3, r3, r3, lsl #1
 1081 0014 D31A     		subs	r3, r2, r3
 154:oscillator.cpp ****     switch(currentWaveform1)
 1082              		.loc 7 154 5 view .LVU306
 1083 0016 012B     		cmp	r3, #1
 153:oscillator.cpp ****     currentWaveform1 = (currentWaveform1 + 1) % 3;
 1084              		.loc 7 153 22 view .LVU307
 1085 0018 0B60     		str	r3, [r1]
 1086              		.loc 7 154 5 is_stmt 1 view .LVU308
 1087 001a 03D0     		beq	.L46
 1088 001c 022B     		cmp	r3, #2
 1089 001e 09D0     		beq	.L47
 1090 0020 23B1     		cbz	r3, .L49
 155:oscillator.cpp ****     {
 156:oscillator.cpp ****         case 0: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_SQUARE); break;
 157:oscillator.cpp ****         case 1: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 158:oscillator.cpp ****         case 2: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 159:oscillator.cpp ****     }
 160:oscillator.cpp **** }
 1091              		.loc 7 160 1 is_stmt 0 view .LVU309
 1092 0022 7047     		bx	lr
 1093              	.L46:
 157:oscillator.cpp ****         case 2: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 1094              		.loc 7 157 9 is_stmt 1 view .LVU310
 157:oscillator.cpp ****         case 2: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 1095              		.loc 7 157 17 view .LVU311
 1096              	.LVL75:
 1097              	.LBB303:
 1098              	.LBI303:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1099              		.loc 1 79 17 view .LVU312
 1100              	.LBB304:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1101              		.loc 1 81 9 view .LVU313
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1102              		.loc 1 81 19 is_stmt 0 view .LVU314
 1103 0024 074B     		ldr	r3, .L50+8
 1104 0026 0622     		movs	r2, #6
 1105 0028 1A70     		strb	r2, [r3]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1106              		.loc 1 82 5 view .LVU315
 1107 002a 7047     		bx	lr
 1108              	.LVL76:
 1109              	.L49:
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1110              		.loc 1 82 5 view .LVU316
 1111              	.LBE304:
 1112              	.LBE303:
 156:oscillator.cpp ****         case 1: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 1113              		.loc 7 156 9 is_stmt 1 view .LVU317
ARM GAS  /tmp/ccAKQp7X.s 			page 40


 156:oscillator.cpp ****         case 1: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 1114              		.loc 7 156 17 view .LVU318
 1115              	.LBB305:
 1116              	.LBI305:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1117              		.loc 1 79 17 view .LVU319
 1118              	.LBB306:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1119              		.loc 1 81 9 view .LVU320
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1120              		.loc 1 81 19 is_stmt 0 view .LVU321
 1121 002c 054B     		ldr	r3, .L50+8
 1122 002e 0722     		movs	r2, #7
 1123 0030 1A70     		strb	r2, [r3]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1124              		.loc 1 82 5 view .LVU322
 1125 0032 7047     		bx	lr
 1126              	.LVL77:
 1127              	.L47:
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1128              		.loc 1 82 5 view .LVU323
 1129              	.LBE306:
 1130              	.LBE305:
 158:oscillator.cpp ****     }
 1131              		.loc 7 158 9 is_stmt 1 view .LVU324
 158:oscillator.cpp ****     }
 1132              		.loc 7 158 17 view .LVU325
 1133              	.LBB307:
 1134              	.LBI307:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1135              		.loc 1 79 17 view .LVU326
 1136              	.LBB308:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1137              		.loc 1 81 9 view .LVU327
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1138              		.loc 1 81 19 is_stmt 0 view .LVU328
 1139 0034 034B     		ldr	r3, .L50+8
 1140 0036 0522     		movs	r2, #5
 1141 0038 1A70     		strb	r2, [r3]
 1142              	.LVL78:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1143              		.loc 1 81 19 view .LVU329
 1144              	.LBE308:
 1145              	.LBE307:
 1146              		.loc 7 160 1 view .LVU330
 1147 003a 7047     		bx	lr
 1148              	.L51:
 1149              		.align	2
 1150              	.L50:
 1151 003c 00000000 		.word	.LANCHOR13
 1152 0040 56555555 		.word	1431655766
 1153 0044 00000000 		.word	.LANCHOR11
 1154              		.cfi_endproc
 1155              	.LFE4683:
 1157              		.section	.text._Z15UpdateWaveform2v,"ax",%progbits
 1158              		.align	1
 1159              		.p2align 2,,3
ARM GAS  /tmp/ccAKQp7X.s 			page 41


 1160              		.global	_Z15UpdateWaveform2v
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu fpv5-d16
 1166              	_Z15UpdateWaveform2v:
 1167              	.LFB4684:
 161:oscillator.cpp **** 
 162:oscillator.cpp **** void UpdateWaveform2()
 163:oscillator.cpp **** {
 1168              		.loc 7 163 1 is_stmt 1 view -0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172              		@ link register save eliminated.
 164:oscillator.cpp ****     currentWaveform2 = (currentWaveform2 + 1) % 3;
 1173              		.loc 7 164 5 view .LVU332
 1174              		.loc 7 164 42 is_stmt 0 view .LVU333
 1175 0000 0E49     		ldr	r1, .L57
 1176              		.loc 7 164 47 view .LVU334
 1177 0002 0F4B     		ldr	r3, .L57+4
 1178              		.loc 7 164 42 view .LVU335
 1179 0004 0A68     		ldr	r2, [r1]
 1180 0006 0132     		adds	r2, r2, #1
 1181              		.loc 7 164 47 view .LVU336
 1182 0008 83FB0203 		smull	r0, r3, r3, r2
 1183 000c A3EBE273 		sub	r3, r3, r2, asr #31
 1184 0010 03EB4303 		add	r3, r3, r3, lsl #1
 1185 0014 D31A     		subs	r3, r2, r3
 165:oscillator.cpp ****     switch(currentWaveform2)
 1186              		.loc 7 165 5 view .LVU337
 1187 0016 012B     		cmp	r3, #1
 164:oscillator.cpp ****     currentWaveform2 = (currentWaveform2 + 1) % 3;
 1188              		.loc 7 164 22 view .LVU338
 1189 0018 0B60     		str	r3, [r1]
 1190              		.loc 7 165 5 is_stmt 1 view .LVU339
 1191 001a 03D0     		beq	.L53
 1192 001c 022B     		cmp	r3, #2
 1193 001e 09D0     		beq	.L54
 1194 0020 23B1     		cbz	r3, .L56
 166:oscillator.cpp ****     {
 167:oscillator.cpp ****         case 0: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_SQUARE); break;
 168:oscillator.cpp ****         case 1: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 169:oscillator.cpp ****         case 2: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 170:oscillator.cpp ****     }
 171:oscillator.cpp **** }
 1195              		.loc 7 171 1 is_stmt 0 view .LVU340
 1196 0022 7047     		bx	lr
 1197              	.L53:
 168:oscillator.cpp ****         case 2: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 1198              		.loc 7 168 9 is_stmt 1 view .LVU341
 168:oscillator.cpp ****         case 2: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 1199              		.loc 7 168 17 view .LVU342
 1200              	.LVL79:
 1201              	.LBB315:
 1202              	.LBI315:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
ARM GAS  /tmp/ccAKQp7X.s 			page 42


 1203              		.loc 1 79 17 view .LVU343
 1204              	.LBB316:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1205              		.loc 1 81 9 view .LVU344
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1206              		.loc 1 81 19 is_stmt 0 view .LVU345
 1207 0024 074B     		ldr	r3, .L57+8
 1208 0026 0622     		movs	r2, #6
 1209 0028 1A70     		strb	r2, [r3]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1210              		.loc 1 82 5 view .LVU346
 1211 002a 7047     		bx	lr
 1212              	.LVL80:
 1213              	.L56:
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1214              		.loc 1 82 5 view .LVU347
 1215              	.LBE316:
 1216              	.LBE315:
 167:oscillator.cpp ****         case 1: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 1217              		.loc 7 167 9 is_stmt 1 view .LVU348
 167:oscillator.cpp ****         case 1: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 1218              		.loc 7 167 17 view .LVU349
 1219              	.LBB317:
 1220              	.LBI317:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1221              		.loc 1 79 17 view .LVU350
 1222              	.LBB318:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1223              		.loc 1 81 9 view .LVU351
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1224              		.loc 1 81 19 is_stmt 0 view .LVU352
 1225 002c 054B     		ldr	r3, .L57+8
 1226 002e 0722     		movs	r2, #7
 1227 0030 1A70     		strb	r2, [r3]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1228              		.loc 1 82 5 view .LVU353
 1229 0032 7047     		bx	lr
 1230              	.LVL81:
 1231              	.L54:
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1232              		.loc 1 82 5 view .LVU354
 1233              	.LBE318:
 1234              	.LBE317:
 169:oscillator.cpp ****     }
 1235              		.loc 7 169 9 is_stmt 1 view .LVU355
 169:oscillator.cpp ****     }
 1236              		.loc 7 169 17 view .LVU356
 1237              	.LBB319:
 1238              	.LBI319:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1239              		.loc 1 79 17 view .LVU357
 1240              	.LBB320:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1241              		.loc 1 81 9 view .LVU358
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1242              		.loc 1 81 19 is_stmt 0 view .LVU359
 1243 0034 034B     		ldr	r3, .L57+8
ARM GAS  /tmp/ccAKQp7X.s 			page 43


 1244 0036 0522     		movs	r2, #5
 1245 0038 1A70     		strb	r2, [r3]
 1246              	.LVL82:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1247              		.loc 1 81 19 view .LVU360
 1248              	.LBE320:
 1249              	.LBE319:
 1250              		.loc 7 171 1 view .LVU361
 1251 003a 7047     		bx	lr
 1252              	.L58:
 1253              		.align	2
 1254              	.L57:
 1255 003c 00000000 		.word	.LANCHOR14
 1256 0040 56555555 		.word	1431655766
 1257 0044 00000000 		.word	.LANCHOR12
 1258              		.cfi_endproc
 1259              	.LFE4684:
 1261              		.section	.text.startup.main,"ax",%progbits
 1262              		.align	1
 1263              		.p2align 2,,3
 1264              		.global	main
 1265              		.syntax unified
 1266              		.thumb
 1267              		.thumb_func
 1268              		.fpu fpv5-d16
 1270              	main:
 1271              	.LFB4685:
 172:oscillator.cpp **** 
 173:oscillator.cpp **** int main(void)
 174:oscillator.cpp **** {
 1272              		.loc 7 174 1 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 112
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 175:oscillator.cpp ****     hw.Configure();
 1276              		.loc 7 175 5 view .LVU363
 174:oscillator.cpp ****     hw.Configure();
 1277              		.loc 7 174 1 is_stmt 0 view .LVU364
 1278 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1279              		.cfi_def_cfa_offset 36
 1280              		.cfi_offset 4, -36
 1281              		.cfi_offset 5, -32
 1282              		.cfi_offset 6, -28
 1283              		.cfi_offset 7, -24
 1284              		.cfi_offset 8, -20
 1285              		.cfi_offset 9, -16
 1286              		.cfi_offset 10, -12
 1287              		.cfi_offset 11, -8
 1288              		.cfi_offset 14, -4
 1289              		.loc 7 175 17 view .LVU365
 1290 0004 AF48     		ldr	r0, .L83
 1291              	.LBB378:
 1292              	.LBB379:
  59:../../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 1293              		.loc 1 59 20 view .LVU366
 1294 0006 0024     		movs	r4, #0
  55:../../../DaisySP/Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
ARM GAS  /tmp/ccAKQp7X.s 			page 44


 1295              		.loc 1 55 20 view .LVU367
 1296 0008 4FF07C55 		mov	r5, #1056964608
  57:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1297              		.loc 1 57 20 view .LVU368
 1298 000c 0027     		movs	r7, #0
 1299 000e DFF808B3 		ldr	fp, .L83+84
 1300 0012 DFF808A3 		ldr	r10, .L83+88
 1301 0016 DFF80893 		ldr	r9, .L83+92
 1302 001a DFF80883 		ldr	r8, .L83+96
 1303              	.LBE379:
 1304              	.LBE378:
 174:oscillator.cpp ****     hw.Configure();
 1305              		.loc 7 174 1 view .LVU369
 1306 001e 2DED028B 		vpush.64	{d8}
 1307              		.cfi_def_cfa_offset 44
 1308              		.cfi_offset 80, -44
 1309              		.cfi_offset 81, -40
 1310 0022 9FB0     		sub	sp, sp, #124
 1311              		.cfi_def_cfa_offset 168
 1312              	.LBB383:
 1313              	.LBB380:
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1314              		.loc 1 53 27 view .LVU370
 1315 0024 F7EE008A 		vmov.f32	s17, #1.0e+0
 1316              	.LBE380:
 1317              	.LBE383:
 1318              		.loc 7 175 17 view .LVU371
 1319 0028 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 1320              	.LVL83:
 176:oscillator.cpp ****     hw.Init();
 1321              		.loc 7 176 5 is_stmt 1 view .LVU372
 1322              		.loc 7 176 12 is_stmt 0 view .LVU373
 1323 002c 0021     		movs	r1, #0
 1324 002e A548     		ldr	r0, .L83
 1325 0030 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 1326              	.LVL84:
 177:oscillator.cpp ****     hw.SetAudioBlockSize(4);
 1327              		.loc 7 177 5 is_stmt 1 view .LVU374
 1328              		.loc 7 177 25 is_stmt 0 view .LVU375
 1329 0034 0421     		movs	r1, #4
 1330 0036 A348     		ldr	r0, .L83
 1331 0038 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 1332              	.LVL85:
 178:oscillator.cpp **** 
 179:oscillator.cpp ****     // Initialize oscillators
 180:oscillator.cpp ****     osc1.Init(hw.AudioSampleRate());
 1333              		.loc 7 180 5 is_stmt 1 view .LVU376
 1334              		.loc 7 180 14 is_stmt 0 view .LVU377
 1335 003c A148     		ldr	r0, .L83
 1336 003e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 1337              	.LVL86:
 1338 0042 F0EE407A 		vmov.f32	s15, s0
 1339              	.LVL87:
 1340              	.LBB384:
 1341              	.LBI378:
  50:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1342              		.loc 1 50 10 is_stmt 1 view .LVU378
ARM GAS  /tmp/ccAKQp7X.s 			page 45


 1343              	.LBB381:
  52:../../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1344              		.loc 1 52 9 view .LVU379
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1345              		.loc 1 58 34 is_stmt 0 view .LVU380
 1346 0046 A048     		ldr	r0, .L83+4
  54:../../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 1347              		.loc 1 54 20 view .LVU381
 1348 0048 9FEDA08A 		vldr.32	s16, .L83+8
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1349              		.loc 1 53 27 view .LVU382
 1350 004c 88EEA77A 		vdiv.f32	s14, s17, s15
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1351              		.loc 1 53 20 view .LVU383
 1352 0050 0646     		mov	r6, r0
  52:../../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1353              		.loc 1 52 20 view .LVU384
 1354 0052 C0ED047A 		vstr.32	s15, [r0, #16]
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1355              		.loc 1 53 9 is_stmt 1 view .LVU385
  54:../../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 1356              		.loc 1 54 20 is_stmt 0 view .LVU386
 1357 0056 80ED028A 		vstr.32	s16, [r0, #8]
  55:../../../DaisySP/Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 1358              		.loc 1 55 20 view .LVU387
 1359 005a 4560     		str	r5, [r0, #4]	@ float
  56:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 1360              		.loc 1 56 20 view .LVU388
 1361 005c C560     		str	r5, [r0, #12]	@ float
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1362              		.loc 1 58 34 view .LVU389
 1363 005e B0EE480A 		vmov.f32	s0, s16
 1364              	.LVL88:
  57:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1365              		.loc 1 57 20 view .LVU390
 1366 0062 8761     		str	r7, [r0, #24]	@ float
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1367              		.loc 1 53 20 view .LVU391
 1368 0064 80ED057A 		vstr.32	s14, [r0, #20]
  54:../../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 1369              		.loc 1 54 9 is_stmt 1 view .LVU392
  55:../../../DaisySP/Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 1370              		.loc 1 55 9 view .LVU393
  56:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 1371              		.loc 1 56 9 view .LVU394
  57:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1372              		.loc 1 57 9 view .LVU395
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1373              		.loc 1 58 9 view .LVU396
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1374              		.loc 1 58 34 is_stmt 0 view .LVU397
 1375 0068 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1376              	.LVL89:
  59:../../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 1377              		.loc 1 59 20 view .LVU398
 1378 006c 3346     		mov	r3, r6
 1379 006e 3470     		strb	r4, [r6]
ARM GAS  /tmp/ccAKQp7X.s 			page 46


  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1380              		.loc 1 58 20 view .LVU399
 1381 0070 86ED070A 		vstr.32	s0, [r6, #28]
  59:../../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 1382              		.loc 1 59 9 is_stmt 1 view .LVU400
  60:../../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 1383              		.loc 1 60 9 view .LVU401
  61:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1384              		.loc 1 61 9 view .LVU402
  61:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1385              		.loc 1 61 20 is_stmt 0 view .LVU403
 1386 0074 40F20116 		movw	r6, #257
 1387              	.LBE381:
 1388              	.LBE384:
 181:oscillator.cpp ****     osc2.Init(hw.AudioSampleRate());
 1389              		.loc 7 181 14 view .LVU404
 1390 0078 9248     		ldr	r0, .L83
 1391              	.LBB385:
 1392              	.LBB382:
  61:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1393              		.loc 1 61 20 view .LVU405
 1394 007a 1E85     		strh	r6, [r3, #40]	@ movhi
 1395              	.LVL90:
  61:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1396              		.loc 1 61 20 view .LVU406
 1397              	.LBE382:
 1398              	.LBE385:
 1399              		.loc 7 181 5 is_stmt 1 view .LVU407
 1400              		.loc 7 181 14 is_stmt 0 view .LVU408
 1401 007c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 1402              	.LVL91:
 1403 0080 F0EE407A 		vmov.f32	s15, s0
 1404              	.LVL92:
 1405              	.LBB386:
 1406              	.LBI386:
  50:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1407              		.loc 1 50 10 is_stmt 1 view .LVU409
 1408              	.LBB387:
  52:../../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1409              		.loc 1 52 9 view .LVU410
  57:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1410              		.loc 1 57 20 is_stmt 0 view .LVU411
 1411 0084 9249     		ldr	r1, .L83+12
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1412              		.loc 1 58 34 view .LVU412
 1413 0086 B0EE480A 		vmov.f32	s0, s16
 1414              	.LVL93:
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1415              		.loc 1 53 27 view .LVU413
 1416 008a 88EEA77A 		vdiv.f32	s14, s17, s15
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1417              		.loc 1 58 34 view .LVU414
 1418 008e 0846     		mov	r0, r1
  52:../../../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 1419              		.loc 1 52 20 view .LVU415
 1420 0090 C1ED047A 		vstr.32	s15, [r1, #16]
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
ARM GAS  /tmp/ccAKQp7X.s 			page 47


 1421              		.loc 1 53 9 is_stmt 1 view .LVU416
  57:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1422              		.loc 1 57 20 is_stmt 0 view .LVU417
 1423 0094 8F61     		str	r7, [r1, #24]	@ float
 1424              	.LBE387:
 1425              	.LBE386:
 182:oscillator.cpp ****     osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI);
 183:oscillator.cpp ****     osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI);
 184:oscillator.cpp **** 
 185:oscillator.cpp ****     // Initialize buttons
 186:oscillator.cpp ****     GPIO button1, button2, buttonQuant, buttonScaleLock;
 187:oscillator.cpp ****     button1.Init(D14, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC1 waveform
 188:oscillator.cpp ****     button2.Init(D13, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC2 waveform
 189:oscillator.cpp ****     buttonQuant.Init(D12, GPIO::Mode::INPUT, GPIO::Pull::PULLUP); // Quantization mode
 190:oscillator.cpp ****     buttonScaleLock.Init(D11, GPIO::Mode::INPUT, GPIO::Pull::PULLUP); // Scale lock toggle
 191:oscillator.cpp **** 
 192:oscillator.cpp ****     // Configure ADC (added A6 for key control)
 193:oscillator.cpp ****     adcConfig[0].InitSingle(A0);  // OSC1 Volume
 194:oscillator.cpp ****     adcConfig[1].InitSingle(A1);  // OSC1 Pitch
 195:oscillator.cpp ****     adcConfig[2].InitSingle(A2);  // OSC1 PWM
 196:oscillator.cpp ****     adcConfig[3].InitSingle(A3);  // OSC2 Volume
 1426              		.loc 7 196 28 view .LVU418
 1427 0096 0727     		movs	r7, #7
 1428              	.LBB391:
 1429              	.LBB388:
  54:../../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 1430              		.loc 1 54 20 view .LVU419
 1431 0098 81ED028A 		vstr.32	s16, [r1, #8]
  55:../../../DaisySP/Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 1432              		.loc 1 55 20 view .LVU420
 1433 009c 4D60     		str	r5, [r1, #4]	@ float
  56:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 1434              		.loc 1 56 20 view .LVU421
 1435 009e CD60     		str	r5, [r1, #12]	@ float
  53:../../../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 1436              		.loc 1 53 20 view .LVU422
 1437 00a0 0D46     		mov	r5, r1
 1438 00a2 81ED057A 		vstr.32	s14, [r1, #20]
  54:../../../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 1439              		.loc 1 54 9 is_stmt 1 view .LVU423
  55:../../../DaisySP/Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 1440              		.loc 1 55 9 view .LVU424
  56:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 1441              		.loc 1 56 9 view .LVU425
  57:../../../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 1442              		.loc 1 57 9 view .LVU426
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1443              		.loc 1 58 9 view .LVU427
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1444              		.loc 1 58 34 is_stmt 0 view .LVU428
 1445 00a6 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 1446              	.LVL94:
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1447              		.loc 1 58 34 view .LVU429
 1448              	.LBE388:
 1449              	.LBE391:
 1450              	.LBB392:
ARM GAS  /tmp/ccAKQp7X.s 			page 48


 1451              	.LBB393:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1452              		.loc 1 81 19 view .LVU430
 1453 00aa 0523     		movs	r3, #5
 1454 00ac 864A     		ldr	r2, .L83+4
 1455              	.LBE393:
 1456              	.LBE392:
 187:oscillator.cpp ****     button2.Init(D13, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC2 waveform
 1457              		.loc 7 187 17 view .LVU431
 1458 00ae 0094     		str	r4, [sp]
 1459 00b0 0AA8     		add	r0, sp, #40
 1460              	.LBB396:
 1461              	.LBB394:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1462              		.loc 1 81 19 view .LVU432
 1463 00b2 1370     		strb	r3, [r2]
 1464              	.LBE394:
 1465              	.LBE396:
 1466              	.LBB397:
 1467              	.LBB398:
 1468 00b4 2B70     		strb	r3, [r5]
 1469              	.LBE398:
 1470              	.LBE397:
 1471              	.LBB400:
 1472              	.LBB401:
 1473              		.file 10 "../../../libDaisy/src/per/gpio.h"
   1:../../../libDaisy/src/per/gpio.h **** #pragma once
   2:../../../libDaisy/src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../../libDaisy/src/per/gpio.h **** #define DSY_GPIO_H
   4:../../../libDaisy/src/per/gpio.h **** #include "daisy_core.h"
   5:../../../libDaisy/src/per/gpio.h **** 
   6:../../../libDaisy/src/per/gpio.h **** #ifdef __cplusplus
   7:../../../libDaisy/src/per/gpio.h **** 
   8:../../../libDaisy/src/per/gpio.h **** namespace daisy
   9:../../../libDaisy/src/per/gpio.h **** {
  10:../../../libDaisy/src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../../libDaisy/src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../../libDaisy/src/per/gpio.h ****  *  @ingroup peripheral
  13:../../../libDaisy/src/per/gpio.h ****  *   
  14:../../../libDaisy/src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../../libDaisy/src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../../libDaisy/src/per/gpio.h ****  * 
  17:../../../libDaisy/src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../../libDaisy/src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../../libDaisy/src/per/gpio.h ****  * 
  20:../../../libDaisy/src/per/gpio.h **** */
  21:../../../libDaisy/src/per/gpio.h **** class GPIO
  22:../../../libDaisy/src/per/gpio.h **** {
  23:../../../libDaisy/src/per/gpio.h ****   public:
  24:../../../libDaisy/src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../../libDaisy/src/per/gpio.h ****     enum class Mode
  26:../../../libDaisy/src/per/gpio.h ****     {
  27:../../../libDaisy/src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../../libDaisy/src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../../libDaisy/src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../../libDaisy/src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../../libDaisy/src/per/gpio.h ****     };
ARM GAS  /tmp/ccAKQp7X.s 			page 49


  32:../../../libDaisy/src/per/gpio.h **** 
  33:../../../libDaisy/src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../../libDaisy/src/per/gpio.h ****      *  
  35:../../../libDaisy/src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../../libDaisy/src/per/gpio.h ****      * 30k and 50k
  37:../../../libDaisy/src/per/gpio.h ****      * 
  38:../../../libDaisy/src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../../libDaisy/src/per/gpio.h ****      * disabled by hardware. 
  40:../../../libDaisy/src/per/gpio.h ****      */
  41:../../../libDaisy/src/per/gpio.h ****     enum class Pull
  42:../../../libDaisy/src/per/gpio.h ****     {
  43:../../../libDaisy/src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../../libDaisy/src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../../libDaisy/src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../../libDaisy/src/per/gpio.h ****     };
  47:../../../libDaisy/src/per/gpio.h **** 
  48:../../../libDaisy/src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../../libDaisy/src/per/gpio.h ****     enum class Speed
  50:../../../libDaisy/src/per/gpio.h ****     {
  51:../../../libDaisy/src/per/gpio.h ****         LOW,
  52:../../../libDaisy/src/per/gpio.h ****         MEDIUM,
  53:../../../libDaisy/src/per/gpio.h ****         HIGH,
  54:../../../libDaisy/src/per/gpio.h ****         VERY_HIGH,
  55:../../../libDaisy/src/per/gpio.h ****     };
  56:../../../libDaisy/src/per/gpio.h **** 
  57:../../../libDaisy/src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../../libDaisy/src/per/gpio.h ****     struct Config
  59:../../../libDaisy/src/per/gpio.h ****     {
  60:../../../libDaisy/src/per/gpio.h ****         Pin   pin;
  61:../../../libDaisy/src/per/gpio.h ****         Mode  mode;
  62:../../../libDaisy/src/per/gpio.h ****         Pull  pull;
  63:../../../libDaisy/src/per/gpio.h ****         Speed speed;
  64:../../../libDaisy/src/per/gpio.h **** 
  65:../../../libDaisy/src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../../libDaisy/src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../../libDaisy/src/per/gpio.h ****          */
  68:../../../libDaisy/src/per/gpio.h ****         Config()
  69:../../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../../libDaisy/src/per/gpio.h ****         {
  71:../../../libDaisy/src/per/gpio.h ****         }
  72:../../../libDaisy/src/per/gpio.h ****     };
  73:../../../libDaisy/src/per/gpio.h **** 
  74:../../../libDaisy/src/per/gpio.h ****     GPIO() {}
 1474              		.loc 10 74 12 view .LVU433
 1475 00b6 4FF60B73 		movw	r3, #65291
 1476              	.LBE401:
 1477              	.LBE400:
 187:oscillator.cpp ****     button2.Init(D13, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC2 waveform
 1478              		.loc 7 187 17 view .LVU434
 1479 00ba 864A     		ldr	r2, .L83+16
 1480              	.LBB412:
 1481              	.LBB389:
  58:../../../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 1482              		.loc 1 58 20 view .LVU435
 1483 00bc 85ED070A 		vstr.32	s0, [r5, #28]
  59:../../../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 1484              		.loc 1 59 9 is_stmt 1 view .LVU436
ARM GAS  /tmp/ccAKQp7X.s 			page 50


  60:../../../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 1485              		.loc 1 60 9 view .LVU437
  61:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1486              		.loc 1 61 9 view .LVU438
 1487              	.LVL95:
  61:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1488              		.loc 1 61 9 is_stmt 0 view .LVU439
 1489              	.LBE389:
 1490              	.LBE412:
 182:oscillator.cpp ****     osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI);
 1491              		.loc 7 182 5 is_stmt 1 view .LVU440
 1492              	.LBB413:
 1493              	.LBI392:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1494              		.loc 1 79 17 view .LVU441
 1495              	.LBB395:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1496              		.loc 1 81 9 view .LVU442
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1497              		.loc 1 81 9 is_stmt 0 view .LVU443
 1498              	.LBE395:
 1499              	.LBE413:
 183:oscillator.cpp **** 
 1500              		.loc 7 183 5 is_stmt 1 view .LVU444
 1501              	.LBB414:
 1502              	.LBI397:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1503              		.loc 1 79 17 view .LVU445
 1504              	.LBB399:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1505              		.loc 1 81 9 view .LVU446
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1506              		.loc 1 81 9 is_stmt 0 view .LVU447
 1507              	.LBE399:
 1508              	.LBE414:
 186:oscillator.cpp ****     button1.Init(D14, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC1 waveform
 1509              		.loc 7 186 5 is_stmt 1 view .LVU448
 1510              	.LBB415:
 1511              	.LBI400:
 1512              		.loc 10 74 5 view .LVU449
 1513              	.LBB409:
 1514              	.LBB402:
 1515              	.LBI402:
  68:../../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1516              		.loc 10 68 9 view .LVU450
 1517              	.LBB403:
 1518              	.LBB404:
 1519              	.LBB405:
 1520              	.LBI405:
 1521              		.file 11 "../../../libDaisy/src/daisy_core.h"
   1:../../../libDaisy/src/daisy_core.h **** #pragma once
   2:../../../libDaisy/src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../../libDaisy/src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../../libDaisy/src/daisy_core.h **** #include <stdint.h>
   5:../../../libDaisy/src/daisy_core.h **** #include <stdlib.h>
   6:../../../libDaisy/src/daisy_core.h **** 
   7:../../../libDaisy/src/daisy_core.h **** #if defined(_MSC_VER)
ARM GAS  /tmp/ccAKQp7X.s 			page 51


   8:../../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../../libDaisy/src/daisy_core.h **** #elif defined(__clang__)
  10:../../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../../libDaisy/src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../../libDaisy/src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../../libDaisy/src/daisy_core.h **** #else
  15:../../../libDaisy/src/daisy_core.h **** #error unknown compiler
  16:../../../libDaisy/src/daisy_core.h **** #endif
  17:../../../libDaisy/src/daisy_core.h **** 
  18:../../../libDaisy/src/daisy_core.h **** /** @addtogroup utility
  19:../../../libDaisy/src/daisy_core.h ****     @{
  20:../../../libDaisy/src/daisy_core.h **** */
  21:../../../libDaisy/src/daisy_core.h **** 
  22:../../../libDaisy/src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../../libDaisy/src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../../libDaisy/src/daisy_core.h **** */
  25:../../../libDaisy/src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../../libDaisy/src/daisy_core.h **** /** 
  27:../../../libDaisy/src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../../libDaisy/src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../../libDaisy/src/daisy_core.h **** cache enabled.
  30:../../../libDaisy/src/daisy_core.h **** */
  31:../../../libDaisy/src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../../libDaisy/src/daisy_core.h **** 
  33:../../../libDaisy/src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../../libDaisy/src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../../libDaisy/src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../../libDaisy/src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../../libDaisy/src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../../libDaisy/src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../../libDaisy/src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../../libDaisy/src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../../libDaisy/src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../../libDaisy/src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../../libDaisy/src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../../libDaisy/src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../../libDaisy/src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../../libDaisy/src/daisy_core.h **** 
  47:../../../libDaisy/src/daisy_core.h **** 
  48:../../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../../libDaisy/src/daisy_core.h **** #define OUT_L out[0]
  51:../../../libDaisy/src/daisy_core.h **** 
  52:../../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../../libDaisy/src/daisy_core.h **** #define OUT_R out[1]
  55:../../../libDaisy/src/daisy_core.h **** 
  56:../../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../../libDaisy/src/daisy_core.h **** #define IN_L in[0]
  59:../../../libDaisy/src/daisy_core.h **** 
  60:../../../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../../libDaisy/src/daisy_core.h **** #define IN_R in[1]
  63:../../../libDaisy/src/daisy_core.h **** 
  64:../../../libDaisy/src/daisy_core.h **** /** 
ARM GAS  /tmp/ccAKQp7X.s 			page 52


  65:../../../libDaisy/src/daisy_core.h ****     Computes cube.
  66:../../../libDaisy/src/daisy_core.h ****     \param x Number to be cubed
  67:../../../libDaisy/src/daisy_core.h ****     \return x ^ 3
  68:../../../libDaisy/src/daisy_core.h **** */
  69:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../../libDaisy/src/daisy_core.h **** {
  71:../../../libDaisy/src/daisy_core.h ****     return (x * x) * x;
  72:../../../libDaisy/src/daisy_core.h **** }
  73:../../../libDaisy/src/daisy_core.h **** 
  74:../../../libDaisy/src/daisy_core.h **** /** 
  75:../../../libDaisy/src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  77:../../../libDaisy/src/daisy_core.h ****     \return Scaled number.
  78:../../../libDaisy/src/daisy_core.h **** */
  79:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../../libDaisy/src/daisy_core.h **** {
  81:../../../libDaisy/src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../../libDaisy/src/daisy_core.h **** }
  83:../../../libDaisy/src/daisy_core.h **** 
  84:../../../libDaisy/src/daisy_core.h **** /**
  85:../../../libDaisy/src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../../libDaisy/src/daisy_core.h **** */
  87:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../../libDaisy/src/daisy_core.h **** {
  89:../../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../../libDaisy/src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../../libDaisy/src/daisy_core.h **** }
  93:../../../libDaisy/src/daisy_core.h **** 
  94:../../../libDaisy/src/daisy_core.h **** 
  95:../../../libDaisy/src/daisy_core.h **** /** 
  96:../../../libDaisy/src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  98:../../../libDaisy/src/daisy_core.h ****     \return Scaled number.
  99:../../../libDaisy/src/daisy_core.h **** */
 100:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../../libDaisy/src/daisy_core.h **** {
 102:../../../libDaisy/src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../../libDaisy/src/daisy_core.h **** }
 104:../../../libDaisy/src/daisy_core.h **** 
 105:../../../libDaisy/src/daisy_core.h **** /**
 106:../../../libDaisy/src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../../libDaisy/src/daisy_core.h **** */
 108:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../../libDaisy/src/daisy_core.h **** {
 110:../../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../../libDaisy/src/daisy_core.h **** }
 114:../../../libDaisy/src/daisy_core.h **** 
 115:../../../libDaisy/src/daisy_core.h **** /** 
 116:../../../libDaisy/src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
 118:../../../libDaisy/src/daisy_core.h ****     \return Scaled number.
 119:../../../libDaisy/src/daisy_core.h **** */
 120:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../../libDaisy/src/daisy_core.h **** {
ARM GAS  /tmp/ccAKQp7X.s 			page 53


 122:../../../libDaisy/src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../../libDaisy/src/daisy_core.h **** }
 124:../../../libDaisy/src/daisy_core.h **** 
 125:../../../libDaisy/src/daisy_core.h **** /**
 126:../../../libDaisy/src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../../libDaisy/src/daisy_core.h **** */
 128:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../../libDaisy/src/daisy_core.h **** {
 130:../../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../../libDaisy/src/daisy_core.h **** }
 134:../../../libDaisy/src/daisy_core.h **** 
 135:../../../libDaisy/src/daisy_core.h **** /**
 136:../../../libDaisy/src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../../libDaisy/src/daisy_core.h ****  */
 138:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../../libDaisy/src/daisy_core.h **** {
 140:../../../libDaisy/src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../../libDaisy/src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../../libDaisy/src/daisy_core.h **** }
 143:../../../libDaisy/src/daisy_core.h **** /**
 144:../../../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../../libDaisy/src/daisy_core.h ****  */
 146:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../../libDaisy/src/daisy_core.h **** {
 148:../../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../../libDaisy/src/daisy_core.h **** }
 152:../../../libDaisy/src/daisy_core.h **** 
 153:../../../libDaisy/src/daisy_core.h **** /**
 154:../../../libDaisy/src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../../libDaisy/src/daisy_core.h ****  */
 156:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../../libDaisy/src/daisy_core.h **** {
 158:../../../libDaisy/src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../../libDaisy/src/daisy_core.h **** }
 160:../../../libDaisy/src/daisy_core.h **** /**
 161:../../../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../../libDaisy/src/daisy_core.h ****  */
 163:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../../libDaisy/src/daisy_core.h **** {
 165:../../../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../../libDaisy/src/daisy_core.h **** }
 169:../../../libDaisy/src/daisy_core.h **** 
 170:../../../libDaisy/src/daisy_core.h **** 
 171:../../../libDaisy/src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../../libDaisy/src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../../libDaisy/src/daisy_core.h ****  *  the hardware.
 174:../../../libDaisy/src/daisy_core.h ****  * 
 175:../../../libDaisy/src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../../libDaisy/src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../../libDaisy/src/daisy_core.h ****  * 
 178:../../../libDaisy/src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
ARM GAS  /tmp/ccAKQp7X.s 			page 54


 179:../../../libDaisy/src/daisy_core.h ****  */
 180:../../../libDaisy/src/daisy_core.h **** typedef enum
 181:../../../libDaisy/src/daisy_core.h **** {
 182:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../../libDaisy/src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../../libDaisy/src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../../libDaisy/src/daisy_core.h **** } dsy_gpio_port;
 196:../../../libDaisy/src/daisy_core.h **** 
 197:../../../libDaisy/src/daisy_core.h **** /** Hardware define pins 
 198:../../../libDaisy/src/daisy_core.h ****  *  
 199:../../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 201:../../../libDaisy/src/daisy_core.h ****  * 
 202:../../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../../libDaisy/src/daisy_core.h ****  */
 204:../../../libDaisy/src/daisy_core.h **** typedef struct
 205:../../../libDaisy/src/daisy_core.h **** {
 206:../../../libDaisy/src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../../libDaisy/src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../../libDaisy/src/daisy_core.h **** } dsy_gpio_pin;
 209:../../../libDaisy/src/daisy_core.h **** 
 210:../../../libDaisy/src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../../libDaisy/src/daisy_core.h ****  * 
 212:../../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 214:../../../libDaisy/src/daisy_core.h ****  * 
 215:../../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../../libDaisy/src/daisy_core.h **** */
 217:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../../libDaisy/src/daisy_core.h **** {
 219:../../../libDaisy/src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../../libDaisy/src/daisy_core.h ****     p.port = port;
 221:../../../libDaisy/src/daisy_core.h ****     p.pin  = pin;
 222:../../../libDaisy/src/daisy_core.h ****     return p;
 223:../../../libDaisy/src/daisy_core.h **** }
 224:../../../libDaisy/src/daisy_core.h **** 
 225:../../../libDaisy/src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../../libDaisy/src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../../libDaisy/src/daisy_core.h ****  * 
 228:../../../libDaisy/src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../../libDaisy/src/daisy_core.h ****  *  backwards compatability.
 230:../../../libDaisy/src/daisy_core.h ****  * 
 231:../../../libDaisy/src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../../libDaisy/src/daisy_core.h ****  */
 233:../../../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../../libDaisy/src/daisy_core.h **** {
 235:../../../libDaisy/src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
ARM GAS  /tmp/ccAKQp7X.s 			page 55


 236:../../../libDaisy/src/daisy_core.h **** }
 237:../../../libDaisy/src/daisy_core.h **** 
 238:../../../libDaisy/src/daisy_core.h **** #ifdef __cplusplus
 239:../../../libDaisy/src/daisy_core.h **** 
 240:../../../libDaisy/src/daisy_core.h **** namespace daisy
 241:../../../libDaisy/src/daisy_core.h **** {
 242:../../../libDaisy/src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../../libDaisy/src/daisy_core.h **** enum GPIOPort
 244:../../../libDaisy/src/daisy_core.h **** {
 245:../../../libDaisy/src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../../libDaisy/src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../../libDaisy/src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../../libDaisy/src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../../libDaisy/src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../../libDaisy/src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../../libDaisy/src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../../libDaisy/src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../../libDaisy/src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../../libDaisy/src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../../libDaisy/src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../../libDaisy/src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../../libDaisy/src/daisy_core.h **** };
 258:../../../libDaisy/src/daisy_core.h **** 
 259:../../../libDaisy/src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../../libDaisy/src/daisy_core.h **** struct Pin
 261:../../../libDaisy/src/daisy_core.h **** {
 262:../../../libDaisy/src/daisy_core.h ****     GPIOPort port;
 263:../../../libDaisy/src/daisy_core.h ****     uint8_t  pin;
 264:../../../libDaisy/src/daisy_core.h **** 
 265:../../../libDaisy/src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../../libDaisy/src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../../libDaisy/src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../../libDaisy/src/daisy_core.h ****     */
 269:../../../libDaisy/src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../../libDaisy/src/daisy_core.h **** 
 271:../../../libDaisy/src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../../libDaisy/src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 1522              		.loc 11 272 15 view .LVU451
 1523              		.loc 11 272 15 is_stmt 0 view .LVU452
 1524              	.LBE405:
 1525              	.LBE404:
 1526              	.LBE403:
 1527              	.LBE402:
 1528              	.LBE409:
 1529              	.LBE415:
 187:oscillator.cpp ****     button2.Init(D13, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC2 waveform
 1530              		.loc 7 187 17 view .LVU453
 1531 00c0 1168     		ldr	r1, [r2]
 1532 00c2 2246     		mov	r2, r4
 1533              	.LBB416:
 1534              	.LBB390:
  61:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1535              		.loc 1 61 20 view .LVU454
 1536 00c4 2E85     		strh	r6, [r5, #40]	@ movhi
 1537              	.LBE390:
 1538              	.LBE416:
 193:oscillator.cpp ****     adcConfig[1].InitSingle(A1);  // OSC1 Pitch
ARM GAS  /tmp/ccAKQp7X.s 			page 56


 1539              		.loc 7 193 28 view .LVU455
 1540 00c6 0225     		movs	r5, #2
 1541              	.LBB417:
 1542              	.LBB410:
 1543              		.loc 10 74 12 view .LVU456
 1544 00c8 0A93     		str	r3, [sp, #40]
 1545              	.LBE410:
 1546              	.LBE417:
 195:oscillator.cpp ****     adcConfig[3].InitSingle(A3);  // OSC2 Volume
 1547              		.loc 7 195 28 view .LVU457
 1548 00ca 0126     		movs	r6, #1
 1549              	.LBB418:
 1550              	.LBB419:
 1551              		.loc 10 74 12 view .LVU458
 1552 00cc 1493     		str	r3, [sp, #80]
 1553              	.LBE419:
 1554              	.LBE418:
 1555              	.LBB433:
 1556              	.LBB434:
 1557 00ce 1993     		str	r3, [sp, #100]
 1558              	.LBE434:
 1559              	.LBE433:
 1560              	.LBB448:
 1561              	.LBB411:
 1562              	.LBB408:
 1563              	.LBB407:
 1564              	.LBB406:
  69:../../../libDaisy/src/per/gpio.h ****         {
 1565              		.loc 10 69 73 view .LVU459
 1566 00d0 0B94     		str	r4, [sp, #44]
 1567 00d2 0C94     		str	r4, [sp, #48]
 1568 00d4 0D94     		str	r4, [sp, #52]
 1569              	.LVL96:
  69:../../../libDaisy/src/per/gpio.h ****         {
 1570              		.loc 10 69 73 view .LVU460
 1571              	.LBE406:
 1572              	.LBE407:
 1573              	.LBE408:
 1574              	.LBE411:
 1575              	.LBE448:
 1576              	.LBB449:
 1577              	.LBI449:
 1578              		.loc 10 74 5 is_stmt 1 view .LVU461
 1579              	.LBB450:
 1580              	.LBB451:
 1581              	.LBI451:
  68:../../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1582              		.loc 10 68 9 view .LVU462
 1583              	.LBB452:
 1584              	.LBB453:
 1585              	.LBB454:
 1586              	.LBI454:
 1587              		.loc 11 272 15 view .LVU463
 1588              		.loc 11 272 15 is_stmt 0 view .LVU464
 1589              	.LBE454:
 1590              	.LBE453:
 1591              	.LBE452:
ARM GAS  /tmp/ccAKQp7X.s 			page 57


 1592              	.LBE451:
 1593              	.LBE450:
 1594              	.LBE449:
 1595              	.LBB463:
 1596              	.LBB430:
 1597              	.LBB420:
 1598              	.LBB421:
 1599              	.LBB422:
  69:../../../libDaisy/src/per/gpio.h ****         {
 1600              		.loc 10 69 73 view .LVU465
 1601 00d6 1794     		str	r4, [sp, #92]
 1602              	.LBE422:
 1603              	.LBE421:
 1604              	.LBE420:
 1605              	.LBE430:
 1606              	.LBE463:
 1607              	.LBB464:
 1608              	.LBB445:
 1609              	.LBB435:
 1610              	.LBB436:
 1611              	.LBB437:
 1612 00d8 1C94     		str	r4, [sp, #112]
 1613              	.LBE437:
 1614              	.LBE436:
 1615              	.LBE435:
 1616              	.LBE445:
 1617              	.LBE464:
 1618              	.LBB465:
 1619              	.LBB461:
 1620              	.LBB459:
 1621              	.LBB457:
 1622              	.LBB455:
 1623 00da CDE90F34 		strd	r3, r4, [sp, #60]
 1624              	.LBE455:
 1625              	.LBE457:
 1626              	.LBE459:
 1627              	.LBE461:
 1628              	.LBE465:
 187:oscillator.cpp ****     button2.Init(D13, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC2 waveform
 1629              		.loc 7 187 17 view .LVU466
 1630 00de 0123     		movs	r3, #1
 1631              	.LBB466:
 1632              	.LBB462:
 1633              	.LBB460:
 1634              	.LBB458:
 1635              	.LBB456:
  69:../../../libDaisy/src/per/gpio.h ****         {
 1636              		.loc 10 69 73 view .LVU467
 1637 00e0 CDE91144 		strd	r4, r4, [sp, #68]
 1638              	.LVL97:
  69:../../../libDaisy/src/per/gpio.h ****         {
 1639              		.loc 10 69 73 view .LVU468
 1640              	.LBE456:
 1641              	.LBE458:
 1642              	.LBE460:
 1643              	.LBE462:
 1644              	.LBE466:
ARM GAS  /tmp/ccAKQp7X.s 			page 58


 1645              	.LBB467:
 1646              	.LBI418:
 1647              		.loc 10 74 5 is_stmt 1 view .LVU469
 1648              	.LBB431:
 1649              	.LBB428:
 1650              	.LBI420:
  68:../../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1651              		.loc 10 68 9 view .LVU470
 1652              	.LBB426:
 1653              	.LBB424:
 1654              	.LBB423:
 1655              	.LBI423:
 1656              		.loc 11 272 15 view .LVU471
 1657              		.loc 11 272 15 is_stmt 0 view .LVU472
 1658              	.LBE423:
 1659              	.LBE424:
 1660              	.LBE426:
 1661              	.LBE428:
 1662              	.LBE431:
 1663              	.LBE467:
 1664              	.LBB468:
 1665              	.LBI433:
 1666              		.loc 10 74 5 is_stmt 1 view .LVU473
 1667              	.LBB446:
 1668              	.LBB443:
 1669              	.LBI435:
  68:../../../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1670              		.loc 10 68 9 view .LVU474
 1671              	.LBB441:
 1672              	.LBB439:
 1673              	.LBB438:
 1674              	.LBI438:
 1675              		.loc 11 272 15 view .LVU475
 1676              		.loc 11 272 15 is_stmt 0 view .LVU476
 1677              	.LBE438:
 1678              	.LBE439:
 1679              	.LBE441:
 1680              	.LBE443:
 1681              	.LBE446:
 1682              	.LBE468:
 187:oscillator.cpp ****     button2.Init(D13, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC2 waveform
 1683              		.loc 7 187 5 is_stmt 1 view .LVU477
 1684              	.LBB469:
 1685              	.LBB432:
 1686              	.LBB429:
 1687              	.LBB427:
 1688              	.LBB425:
  69:../../../libDaisy/src/per/gpio.h ****         {
 1689              		.loc 10 69 73 is_stmt 0 view .LVU478
 1690 00e4 CDE91544 		strd	r4, r4, [sp, #84]
 1691              	.LBE425:
 1692              	.LBE427:
 1693              	.LBE429:
 1694              	.LBE432:
 1695              	.LBE469:
 1696              	.LBB470:
 1697              	.LBB447:
ARM GAS  /tmp/ccAKQp7X.s 			page 59


 1698              	.LBB444:
 1699              	.LBB442:
 1700              	.LBB440:
 1701 00e8 CDE91A44 		strd	r4, r4, [sp, #104]
 1702              	.LBE440:
 1703              	.LBE442:
 1704              	.LBE444:
 1705              	.LBE447:
 1706              	.LBE470:
 187:oscillator.cpp ****     button2.Init(D13, GPIO::Mode::INPUT, GPIO::Pull::PULLUP);  // OSC2 waveform
 1707              		.loc 7 187 17 view .LVU479
 1708 00ec FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1709              	.LVL98:
 188:oscillator.cpp ****     buttonQuant.Init(D12, GPIO::Mode::INPUT, GPIO::Pull::PULLUP); // Quantization mode
 1710              		.loc 7 188 5 is_stmt 1 view .LVU480
 188:oscillator.cpp ****     buttonQuant.Init(D12, GPIO::Mode::INPUT, GPIO::Pull::PULLUP); // Quantization mode
 1711              		.loc 7 188 17 is_stmt 0 view .LVU481
 1712 00f0 794B     		ldr	r3, .L83+20
 1713 00f2 2246     		mov	r2, r4
 1714 00f4 0FA8     		add	r0, sp, #60
 1715 00f6 1968     		ldr	r1, [r3]
 1716 00f8 0123     		movs	r3, #1
 1717 00fa 0094     		str	r4, [sp]
 1718 00fc FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1719              	.LVL99:
 189:oscillator.cpp ****     buttonScaleLock.Init(D11, GPIO::Mode::INPUT, GPIO::Pull::PULLUP); // Scale lock toggle
 1720              		.loc 7 189 5 is_stmt 1 view .LVU482
 189:oscillator.cpp ****     buttonScaleLock.Init(D11, GPIO::Mode::INPUT, GPIO::Pull::PULLUP); // Scale lock toggle
 1721              		.loc 7 189 21 is_stmt 0 view .LVU483
 1722 0100 764B     		ldr	r3, .L83+24
 1723 0102 2246     		mov	r2, r4
 1724 0104 14A8     		add	r0, sp, #80
 1725 0106 1968     		ldr	r1, [r3]
 1726 0108 0123     		movs	r3, #1
 1727 010a 0094     		str	r4, [sp]
 1728 010c FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1729              	.LVL100:
 190:oscillator.cpp **** 
 1730              		.loc 7 190 5 is_stmt 1 view .LVU484
 190:oscillator.cpp **** 
 1731              		.loc 7 190 25 is_stmt 0 view .LVU485
 1732 0110 734B     		ldr	r3, .L83+28
 1733 0112 2246     		mov	r2, r4
 1734 0114 19A8     		add	r0, sp, #100
 1735 0116 1968     		ldr	r1, [r3]
 1736 0118 0123     		movs	r3, #1
 1737 011a 0094     		str	r4, [sp]
 1738 011c FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1739              	.LVL101:
 193:oscillator.cpp ****     adcConfig[1].InitSingle(A1);  // OSC1 Pitch
 1740              		.loc 7 193 5 is_stmt 1 view .LVU486
 193:oscillator.cpp ****     adcConfig[1].InitSingle(A1);  // OSC1 Pitch
 1741              		.loc 7 193 28 is_stmt 0 view .LVU487
 1742 0120 8DF80C50 		strb	r5, [sp, #12]
 1743 0124 8DF80D40 		strb	r4, [sp, #13]
 1744 0128 2A46     		mov	r2, r5
 1745 012a 0399     		ldr	r1, [sp, #12]
ARM GAS  /tmp/ccAKQp7X.s 			page 60


 1746 012c 6D48     		ldr	r0, .L83+32
 1747 012e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 1748              	.LVL102:
 194:oscillator.cpp ****     adcConfig[2].InitSingle(A2);  // OSC1 PWM
 1749              		.loc 7 194 5 is_stmt 1 view .LVU488
 194:oscillator.cpp ****     adcConfig[2].InitSingle(A2);  // OSC1 PWM
 1750              		.loc 7 194 28 is_stmt 0 view .LVU489
 1751 0132 0323     		movs	r3, #3
 1752 0134 8DF81040 		strb	r4, [sp, #16]
 1753 0138 2A46     		mov	r2, r5
 1754 013a 8DF81130 		strb	r3, [sp, #17]
 1755 013e 0499     		ldr	r1, [sp, #16]
 1756 0140 6948     		ldr	r0, .L83+36
 1757 0142 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 1758              	.LVL103:
 195:oscillator.cpp ****     adcConfig[3].InitSingle(A3);  // OSC2 Volume
 1759              		.loc 7 195 5 is_stmt 1 view .LVU490
 195:oscillator.cpp ****     adcConfig[3].InitSingle(A3);  // OSC2 Volume
 1760              		.loc 7 195 28 is_stmt 0 view .LVU491
 1761 0146 8DF81460 		strb	r6, [sp, #20]
 1762 014a 8DF81560 		strb	r6, [sp, #21]
 1763 014e 2A46     		mov	r2, r5
 1764 0150 0599     		ldr	r1, [sp, #20]
 1765 0152 6648     		ldr	r0, .L83+40
 1766 0154 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 1767              	.LVL104:
 1768              		.loc 7 196 5 is_stmt 1 view .LVU492
 1769              		.loc 7 196 28 is_stmt 0 view .LVU493
 1770 0158 8DF81840 		strb	r4, [sp, #24]
 1771 015c 8DF81970 		strb	r7, [sp, #25]
 1772 0160 2A46     		mov	r2, r5
 1773 0162 0699     		ldr	r1, [sp, #24]
 1774 0164 6248     		ldr	r0, .L83+44
 1775 0166 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 1776              	.LVL105:
 197:oscillator.cpp ****     adcConfig[4].InitSingle(A4);  // OSC2 Pitch
 1777              		.loc 7 197 5 is_stmt 1 view .LVU494
 1778              		.loc 7 197 28 is_stmt 0 view .LVU495
 1779 016a 0623     		movs	r3, #6
 1780 016c 8DF81C40 		strb	r4, [sp, #28]
 1781 0170 2A46     		mov	r2, r5
 1782 0172 8DF81D30 		strb	r3, [sp, #29]
 198:oscillator.cpp ****     adcConfig[5].InitSingle(A5);  // OSC2 PWM
 199:oscillator.cpp ****     adcConfig[6].InitSingle(A6);  // Key/Root control
 1783              		.loc 7 199 28 view .LVU496
 1784 0176 0424     		movs	r4, #4
 197:oscillator.cpp ****     adcConfig[4].InitSingle(A4);  // OSC2 Pitch
 1785              		.loc 7 197 28 view .LVU497
 1786 0178 0799     		ldr	r1, [sp, #28]
 1787 017a 5E48     		ldr	r0, .L83+48
 1788 017c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 1789              	.LVL106:
 198:oscillator.cpp ****     adcConfig[5].InitSingle(A5);  // OSC2 PWM
 1790              		.loc 7 198 5 is_stmt 1 view .LVU498
 198:oscillator.cpp ****     adcConfig[5].InitSingle(A5);  // OSC2 PWM
 1791              		.loc 7 198 28 is_stmt 0 view .LVU499
 1792 0180 8DF82160 		strb	r6, [sp, #33]
ARM GAS  /tmp/ccAKQp7X.s 			page 61


 1793 0184 8DF82050 		strb	r5, [sp, #32]
 1794 0188 2A46     		mov	r2, r5
 1795 018a 0899     		ldr	r1, [sp, #32]
 1796 018c 5A48     		ldr	r0, .L83+52
 1797 018e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 1798              	.LVL107:
 1799              		.loc 7 199 5 is_stmt 1 view .LVU500
 1800              		.loc 7 199 28 is_stmt 0 view .LVU501
 1801 0192 8DF82450 		strb	r5, [sp, #36]
 1802 0196 8DF82540 		strb	r4, [sp, #37]
 1803 019a 2A46     		mov	r2, r5
 1804 019c 0999     		ldr	r1, [sp, #36]
 1805 019e 5748     		ldr	r0, .L83+56
 1806 01a0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 1807              	.LVL108:
 200:oscillator.cpp ****     hw.adc.Init(adcConfig, 7);    // 7 channels now
 1808              		.loc 7 200 5 is_stmt 1 view .LVU502
 1809              		.loc 7 200 16 is_stmt 0 view .LVU503
 1810 01a4 2346     		mov	r3, r4
 1811 01a6 3A46     		mov	r2, r7
 1812 01a8 4E49     		ldr	r1, .L83+32
 1813 01aa 5548     		ldr	r0, .L83+60
 1814 01ac FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 1815              	.LVL109:
 201:oscillator.cpp ****     hw.adc.Start();
 1816              		.loc 7 201 5 is_stmt 1 view .LVU504
 1817              		.loc 7 201 17 is_stmt 0 view .LVU505
 1818 01b0 5348     		ldr	r0, .L83+60
 1819 01b2 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 1820              	.LVL110:
 202:oscillator.cpp **** 
 203:oscillator.cpp ****     hw.StartAudio(AudioCallback);
 1821              		.loc 7 203 5 is_stmt 1 view .LVU506
 1822              		.loc 7 203 18 is_stmt 0 view .LVU507
 1823 01b6 5349     		ldr	r1, .L83+64
 1824 01b8 4248     		ldr	r0, .L83
 1825 01ba 534F     		ldr	r7, .L83+68
 1826 01bc 534E     		ldr	r6, .L83+72
 1827 01be 544D     		ldr	r5, .L83+76
 1828 01c0 544C     		ldr	r4, .L83+80
 1829 01c2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 1830              	.LVL111:
 1831 01c6 32E0     		b	.L68
 1832              	.LVL112:
 1833              	.L60:
 1834              	.LBB471:
 204:oscillator.cpp **** 
 205:oscillator.cpp ****     while(1)
 206:oscillator.cpp ****     {
 207:oscillator.cpp ****         // Handle OSC1 button (D14)
 208:oscillator.cpp ****         bool currentButtonState1 = !button1.Read();
 209:oscillator.cpp ****         if(currentButtonState1 && !lastButtonState1) {
 210:oscillator.cpp ****             UpdateWaveform1();
 211:oscillator.cpp ****         }
 212:oscillator.cpp ****         lastButtonState1 = currentButtonState1;
 1835              		.loc 7 212 9 is_stmt 1 view .LVU508
 1836              		.loc 7 212 26 is_stmt 0 view .LVU509
ARM GAS  /tmp/ccAKQp7X.s 			page 62


 1837 01c8 3870     		strb	r0, [r7]
 213:oscillator.cpp ****         
 214:oscillator.cpp ****         // Handle OSC2 button (D13)
 215:oscillator.cpp ****         bool currentButtonState2 = !button2.Read();
 1838              		.loc 7 215 9 is_stmt 1 view .LVU510
 1839              		.loc 7 215 49 is_stmt 0 view .LVU511
 1840 01ca 0FA8     		add	r0, sp, #60
 1841 01cc FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1842              	.LVL113:
 1843              		.loc 7 215 50 view .LVU512
 1844 01d0 80F00100 		eor	r0, r0, #1
 1845              	.LVL114:
 216:oscillator.cpp ****         if(currentButtonState2 && !lastButtonState2) {
 1846              		.loc 7 216 9 is_stmt 1 view .LVU513
 1847 01d4 10F0FF00 		ands	r0, r0, #255
 1848              	.LVL115:
 1849              		.loc 7 216 9 is_stmt 0 view .LVU514
 1850 01d8 02D0     		beq	.L63
 1851              		.loc 7 216 32 discriminator 1 view .LVU515
 1852 01da 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 1853 01dc 002B     		cmp	r3, #0
 1854 01de 49D0     		beq	.L82
 1855              	.L63:
 217:oscillator.cpp ****             UpdateWaveform2();
 218:oscillator.cpp ****         }
 219:oscillator.cpp ****         lastButtonState2 = currentButtonState2;
 1856              		.loc 7 219 9 is_stmt 1 view .LVU516
 1857              		.loc 7 219 26 is_stmt 0 view .LVU517
 1858 01e0 3070     		strb	r0, [r6]
 220:oscillator.cpp ****         
 221:oscillator.cpp ****         // Handle quantization mode button (D12)
 222:oscillator.cpp ****         bool currentButtonStateQuant = !buttonQuant.Read();
 1859              		.loc 7 222 9 is_stmt 1 view .LVU518
 1860              		.loc 7 222 57 is_stmt 0 view .LVU519
 1861 01e2 14A8     		add	r0, sp, #80
 1862 01e4 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1863              	.LVL116:
 1864              		.loc 7 222 58 view .LVU520
 1865 01e8 80F00100 		eor	r0, r0, #1
 1866              	.LVL117:
 223:oscillator.cpp ****         if(currentButtonStateQuant && !lastButtonStateQuant) {
 1867              		.loc 7 223 9 is_stmt 1 view .LVU521
 1868 01ec 10F0FF00 		ands	r0, r0, #255
 1869              	.LVL118:
 1870              		.loc 7 223 9 is_stmt 0 view .LVU522
 1871 01f0 08D0     		beq	.L66
 1872              		.loc 7 223 36 discriminator 1 view .LVU523
 1873 01f2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1874 01f4 33B9     		cbnz	r3, .L66
 224:oscillator.cpp ****             // Cycle through quantization modes: OFF → CHROMATIC → MAJOR → MINOR → OFF...
 225:oscillator.cpp ****             quantizeMode = static_cast<QuantMode>((static_cast<int>(quantizeMode) + 1) % 4);
 1875              		.loc 7 225 13 is_stmt 1 view .LVU524
 1876              		.loc 7 225 52 is_stmt 0 view .LVU525
 1877 01f6 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 1878              		.loc 7 225 83 view .LVU526
 1879 01fa 0133     		adds	r3, r3, #1
 1880              		.loc 7 225 88 view .LVU527
ARM GAS  /tmp/ccAKQp7X.s 			page 63


 1881 01fc 03F00303 		and	r3, r3, #3
 1882              		.loc 7 225 28 view .LVU528
 1883 0200 89F80030 		strb	r3, [r9]
 1884              	.L66:
 226:oscillator.cpp ****         }
 227:oscillator.cpp ****         lastButtonStateQuant = currentButtonStateQuant;
 1885              		.loc 7 227 9 is_stmt 1 view .LVU529
 1886              		.loc 7 227 30 is_stmt 0 view .LVU530
 1887 0204 2870     		strb	r0, [r5]
 228:oscillator.cpp ****         
 229:oscillator.cpp ****         // Handle scale lock button (D11)
 230:oscillator.cpp ****         bool currentButtonStateScaleLock = !buttonScaleLock.Read();
 1888              		.loc 7 230 9 is_stmt 1 view .LVU531
 1889              		.loc 7 230 65 is_stmt 0 view .LVU532
 1890 0206 19A8     		add	r0, sp, #100
 1891 0208 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1892              	.LVL119:
 1893              		.loc 7 230 66 view .LVU533
 1894 020c 80F00100 		eor	r0, r0, #1
 1895              	.LVL120:
 231:oscillator.cpp ****         if(currentButtonStateScaleLock && !lastButtonStateScaleLock) {
 1896              		.loc 7 231 9 is_stmt 1 view .LVU534
 1897 0210 10F0FF00 		ands	r0, r0, #255
 1898              	.LVL121:
 1899              		.loc 7 231 9 is_stmt 0 view .LVU535
 1900 0214 07D0     		beq	.L67
 1901              		.loc 7 231 40 discriminator 1 view .LVU536
 1902 0216 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1903 0218 2BB9     		cbnz	r3, .L67
 232:oscillator.cpp ****             scaleLockEnabled = !scaleLockEnabled;
 1904              		.loc 7 232 13 is_stmt 1 view .LVU537
 1905              		.loc 7 232 32 is_stmt 0 view .LVU538
 1906 021a 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 1907 021e 83F00103 		eor	r3, r3, #1
 1908              		.loc 7 232 30 view .LVU539
 1909 0222 88F80030 		strb	r3, [r8]
 1910              	.L67:
 233:oscillator.cpp ****         }
 234:oscillator.cpp ****         lastButtonStateScaleLock = currentButtonStateScaleLock;
 1911              		.loc 7 234 9 is_stmt 1 view .LVU540
 1912              		.loc 7 234 34 is_stmt 0 view .LVU541
 1913 0226 2070     		strb	r0, [r4]
 235:oscillator.cpp ****         
 236:oscillator.cpp ****         System::Delay(10);
 1914              		.loc 7 236 9 is_stmt 1 view .LVU542
 1915              		.loc 7 236 22 is_stmt 0 view .LVU543
 1916 0228 0A20     		movs	r0, #10
 1917 022a FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 1918              	.LVL122:
 1919              	.LBE471:
 205:oscillator.cpp ****     {
 1920              		.loc 7 205 5 is_stmt 1 view .LVU544
 1921              	.L68:
 205:oscillator.cpp ****     {
 1922              		.loc 7 205 5 view .LVU545
 1923              	.LBB490:
 208:oscillator.cpp ****         if(currentButtonState1 && !lastButtonState1) {
ARM GAS  /tmp/ccAKQp7X.s 			page 64


 1924              		.loc 7 208 9 view .LVU546
 208:oscillator.cpp ****         if(currentButtonState1 && !lastButtonState1) {
 1925              		.loc 7 208 49 is_stmt 0 view .LVU547
 1926 022e 0AA8     		add	r0, sp, #40
 1927 0230 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 1928              	.LVL123:
 208:oscillator.cpp ****         if(currentButtonState1 && !lastButtonState1) {
 1929              		.loc 7 208 50 view .LVU548
 1930 0234 80F00100 		eor	r0, r0, #1
 1931              	.LVL124:
 209:oscillator.cpp ****             UpdateWaveform1();
 1932              		.loc 7 209 9 is_stmt 1 view .LVU549
 1933 0238 10F0FF00 		ands	r0, r0, #255
 1934              	.LVL125:
 209:oscillator.cpp ****             UpdateWaveform1();
 1935              		.loc 7 209 9 is_stmt 0 view .LVU550
 1936 023c C4D0     		beq	.L60
 209:oscillator.cpp ****             UpdateWaveform1();
 1937              		.loc 7 209 32 discriminator 1 view .LVU551
 1938 023e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1939 0240 002B     		cmp	r3, #0
 1940 0242 C1D1     		bne	.L60
 210:oscillator.cpp ****         }
 1941              		.loc 7 210 13 is_stmt 1 view .LVU552
 1942              	.LBB472:
 1943              	.LBI472:
 151:oscillator.cpp **** {
 1944              		.loc 7 151 6 view .LVU553
 1945              	.LBB473:
 153:oscillator.cpp ****     switch(currentWaveform1)
 1946              		.loc 7 153 5 view .LVU554
 153:oscillator.cpp ****     switch(currentWaveform1)
 1947              		.loc 7 153 42 is_stmt 0 view .LVU555
 1948 0244 DBF80020 		ldr	r2, [fp]
 153:oscillator.cpp ****     switch(currentWaveform1)
 1949              		.loc 7 153 47 view .LVU556
 1950 0248 A3F1AA33 		sub	r3, r3, #-1431655766
 153:oscillator.cpp ****     switch(currentWaveform1)
 1951              		.loc 7 153 42 view .LVU557
 1952 024c 0132     		adds	r2, r2, #1
 153:oscillator.cpp ****     switch(currentWaveform1)
 1953              		.loc 7 153 47 view .LVU558
 1954 024e 83FB0213 		smull	r1, r3, r3, r2
 1955 0252 A3EBE273 		sub	r3, r3, r2, asr #31
 1956 0256 03EB4303 		add	r3, r3, r3, lsl #1
 1957 025a D31A     		subs	r3, r2, r3
 154:oscillator.cpp ****     {
 1958              		.loc 7 154 5 view .LVU559
 1959 025c 012B     		cmp	r3, #1
 153:oscillator.cpp ****     switch(currentWaveform1)
 1960              		.loc 7 153 22 view .LVU560
 1961 025e CBF80030 		str	r3, [fp]
 154:oscillator.cpp ****     {
 1962              		.loc 7 154 5 is_stmt 1 view .LVU561
 1963 0262 2BD0     		beq	.L61
 1964 0264 022B     		cmp	r3, #2
 1965 0266 25D0     		beq	.L62
ARM GAS  /tmp/ccAKQp7X.s 			page 65


 1966 0268 002B     		cmp	r3, #0
 1967 026a ADD1     		bne	.L60
 156:oscillator.cpp ****         case 1: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 1968              		.loc 7 156 9 view .LVU562
 156:oscillator.cpp ****         case 1: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 1969              		.loc 7 156 17 view .LVU563
 1970              	.LVL126:
 1971              	.LBB474:
 1972              	.LBI474:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 1973              		.loc 1 79 17 view .LVU564
 1974              	.LBB475:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1975              		.loc 1 81 9 view .LVU565
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 1976              		.loc 1 81 19 is_stmt 0 view .LVU566
 1977 026c 0723     		movs	r3, #7
 1978 026e 164A     		ldr	r2, .L83+4
 1979 0270 1370     		strb	r3, [r2]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1980              		.loc 1 82 5 view .LVU567
 1981 0272 A9E7     		b	.L60
 1982              	.LVL127:
 1983              	.L82:
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 1984              		.loc 1 82 5 view .LVU568
 1985              	.LBE475:
 1986              	.LBE474:
 1987              	.LBE473:
 1988              	.LBE472:
 217:oscillator.cpp ****         }
 1989              		.loc 7 217 13 is_stmt 1 view .LVU569
 1990              	.LBB481:
 1991              	.LBI481:
 162:oscillator.cpp **** {
 1992              		.loc 7 162 6 view .LVU570
 1993              	.LBB482:
 164:oscillator.cpp ****     switch(currentWaveform2)
 1994              		.loc 7 164 5 view .LVU571
 164:oscillator.cpp ****     switch(currentWaveform2)
 1995              		.loc 7 164 42 is_stmt 0 view .LVU572
 1996 0274 DAF80020 		ldr	r2, [r10]
 164:oscillator.cpp ****     switch(currentWaveform2)
 1997              		.loc 7 164 47 view .LVU573
 1998 0278 A3F1AA33 		sub	r3, r3, #-1431655766
 164:oscillator.cpp ****     switch(currentWaveform2)
 1999              		.loc 7 164 42 view .LVU574
 2000 027c 0132     		adds	r2, r2, #1
 164:oscillator.cpp ****     switch(currentWaveform2)
 2001              		.loc 7 164 47 view .LVU575
 2002 027e 83FB0213 		smull	r1, r3, r3, r2
 2003 0282 A3EBE273 		sub	r3, r3, r2, asr #31
 2004 0286 03EB4303 		add	r3, r3, r3, lsl #1
 2005 028a D31A     		subs	r3, r2, r3
 165:oscillator.cpp ****     {
 2006              		.loc 7 165 5 view .LVU576
 2007 028c 012B     		cmp	r3, #1
ARM GAS  /tmp/ccAKQp7X.s 			page 66


 164:oscillator.cpp ****     switch(currentWaveform2)
 2008              		.loc 7 164 22 view .LVU577
 2009 028e CAF80030 		str	r3, [r10]
 165:oscillator.cpp ****     {
 2010              		.loc 7 165 5 is_stmt 1 view .LVU578
 2011 0292 0BD0     		beq	.L64
 2012 0294 022B     		cmp	r3, #2
 2013 0296 05D0     		beq	.L65
 2014 0298 002B     		cmp	r3, #0
 2015 029a A1D1     		bne	.L63
 167:oscillator.cpp ****         case 1: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 2016              		.loc 7 167 9 view .LVU579
 167:oscillator.cpp ****         case 1: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_SAW); break;
 2017              		.loc 7 167 17 view .LVU580
 2018              	.LVL128:
 2019              	.LBB483:
 2020              	.LBI483:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 2021              		.loc 1 79 17 view .LVU581
 2022              	.LBB484:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2023              		.loc 1 81 9 view .LVU582
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2024              		.loc 1 81 19 is_stmt 0 view .LVU583
 2025 029c 0723     		movs	r3, #7
 2026 029e 0C4A     		ldr	r2, .L83+12
 2027 02a0 1370     		strb	r3, [r2]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2028              		.loc 1 82 5 view .LVU584
 2029 02a2 9DE7     		b	.L63
 2030              	.LVL129:
 2031              	.L65:
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2032              		.loc 1 82 5 view .LVU585
 2033              	.LBE484:
 2034              	.LBE483:
 169:oscillator.cpp ****     }
 2035              		.loc 7 169 9 is_stmt 1 view .LVU586
 169:oscillator.cpp ****     }
 2036              		.loc 7 169 17 view .LVU587
 2037              	.LBB485:
 2038              	.LBI485:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 2039              		.loc 1 79 17 view .LVU588
 2040              	.LBB486:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2041              		.loc 1 81 9 view .LVU589
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2042              		.loc 1 81 19 is_stmt 0 view .LVU590
 2043 02a4 0523     		movs	r3, #5
 2044 02a6 0A4A     		ldr	r2, .L83+12
 2045 02a8 1370     		strb	r3, [r2]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2046              		.loc 1 82 5 view .LVU591
 2047 02aa 99E7     		b	.L63
 2048              	.LVL130:
 2049              	.L64:
ARM GAS  /tmp/ccAKQp7X.s 			page 67


  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2050              		.loc 1 82 5 view .LVU592
 2051              	.LBE486:
 2052              	.LBE485:
 168:oscillator.cpp ****         case 2: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 2053              		.loc 7 168 9 is_stmt 1 view .LVU593
 168:oscillator.cpp ****         case 2: osc2.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 2054              		.loc 7 168 17 view .LVU594
 2055              	.LBB487:
 2056              	.LBI487:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 2057              		.loc 1 79 17 view .LVU595
 2058              	.LBB488:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2059              		.loc 1 81 9 view .LVU596
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2060              		.loc 1 81 19 is_stmt 0 view .LVU597
 2061 02ac 0623     		movs	r3, #6
 2062 02ae 084A     		ldr	r2, .L83+12
 2063 02b0 1370     		strb	r3, [r2]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2064              		.loc 1 82 5 view .LVU598
 2065 02b2 95E7     		b	.L63
 2066              	.LVL131:
 2067              	.L62:
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2068              		.loc 1 82 5 view .LVU599
 2069              	.LBE488:
 2070              	.LBE487:
 2071              	.LBE482:
 2072              	.LBE481:
 2073              	.LBB489:
 2074              	.LBB480:
 158:oscillator.cpp ****     }
 2075              		.loc 7 158 9 is_stmt 1 view .LVU600
 158:oscillator.cpp ****     }
 2076              		.loc 7 158 17 view .LVU601
 2077              	.LBB476:
 2078              	.LBI476:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 2079              		.loc 1 79 17 view .LVU602
 2080              	.LBB477:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2081              		.loc 1 81 9 view .LVU603
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2082              		.loc 1 81 19 is_stmt 0 view .LVU604
 2083 02b4 0523     		movs	r3, #5
 2084 02b6 044A     		ldr	r2, .L83+4
 2085 02b8 1370     		strb	r3, [r2]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2086              		.loc 1 82 5 view .LVU605
 2087 02ba 85E7     		b	.L60
 2088              	.LVL132:
 2089              	.L61:
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2090              		.loc 1 82 5 view .LVU606
 2091              	.LBE477:
ARM GAS  /tmp/ccAKQp7X.s 			page 68


 2092              	.LBE476:
 157:oscillator.cpp ****         case 2: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 2093              		.loc 7 157 9 is_stmt 1 view .LVU607
 157:oscillator.cpp ****         case 2: osc1.SetWaveform(Oscillator::WAVE_POLYBLEP_TRI); break;
 2094              		.loc 7 157 17 view .LVU608
 2095              	.LBB478:
 2096              	.LBI478:
  79:../../../DaisySP/Source/Synthesis/oscillator.h ****     {
 2097              		.loc 1 79 17 view .LVU609
 2098              	.LBB479:
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2099              		.loc 1 81 9 view .LVU610
  81:../../../DaisySP/Source/Synthesis/oscillator.h ****     }
 2100              		.loc 1 81 19 is_stmt 0 view .LVU611
 2101 02bc 0623     		movs	r3, #6
 2102 02be 024A     		ldr	r2, .L83+4
 2103 02c0 1370     		strb	r3, [r2]
  82:../../../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the pulse width for WAVE_SQUARE and WAVE_POLYBLEP_SQUARE (range 0 - 1)
 2104              		.loc 1 82 5 view .LVU612
 2105 02c2 81E7     		b	.L60
 2106              	.L84:
 2107              		.align	2
 2108              	.L83:
 2109 02c4 00000000 		.word	.LANCHOR1
 2110 02c8 00000000 		.word	.LANCHOR11
 2111 02cc 0000C842 		.word	1120403456
 2112 02d0 00000000 		.word	.LANCHOR12
 2113 02d4 00000000 		.word	.LANCHOR15
 2114 02d8 00000000 		.word	.LANCHOR16
 2115 02dc 00000000 		.word	.LANCHOR17
 2116 02e0 00000000 		.word	.LANCHOR18
 2117 02e4 00000000 		.word	.LANCHOR19
 2118 02e8 12000000 		.word	.LANCHOR19+18
 2119 02ec 24000000 		.word	.LANCHOR19+36
 2120 02f0 36000000 		.word	.LANCHOR19+54
 2121 02f4 48000000 		.word	.LANCHOR19+72
 2122 02f8 5A000000 		.word	.LANCHOR19+90
 2123 02fc 6C000000 		.word	.LANCHOR19+108
 2124 0300 18000000 		.word	.LANCHOR1+24
 2125 0304 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 2126 0308 00000000 		.word	.LANCHOR20
 2127 030c 00000000 		.word	.LANCHOR21
 2128 0310 00000000 		.word	.LANCHOR22
 2129 0314 00000000 		.word	.LANCHOR23
 2130 0318 00000000 		.word	.LANCHOR13
 2131 031c 00000000 		.word	.LANCHOR14
 2132 0320 00000000 		.word	.LANCHOR9
 2133 0324 00000000 		.word	.LANCHOR10
 2134              	.LBE479:
 2135              	.LBE478:
 2136              	.LBE480:
 2137              	.LBE489:
 2138              	.LBE490:
 2139              		.cfi_endproc
 2140              	.LFE4685:
 2142              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 2143              		.align	1
ARM GAS  /tmp/ccAKQp7X.s 			page 69


 2144              		.p2align 2,,3
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2148              		.fpu fpv5-d16
 2150              	_GLOBAL__sub_I_hw:
 2151              	.LFB5248:
 237:oscillator.cpp ****     }
 238:oscillator.cpp **** }...
 2152              		.loc 7 238 1 is_stmt 1 view -0
 2153              		.cfi_startproc
 2154              		@ args = 0, pretend = 0, frame = 0
 2155              		@ frame_needed = 0, uses_anonymous_args = 0
 2156              	.LBB516:
 2157              	.LBI516:
 2158              		.loc 7 238 1 view .LVU614
 2159              	.LVL133:
 2160              	.LBB517:
 2161              	.LBB518:
 2162              	.LBI518:
  21:../../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 2163              		.loc 2 21 5 view .LVU615
 2164              	.LBB519:
 2165              	.LBB520:
 2166              	.LBI520:
 2167              		.file 12 "../../../libDaisy/src/per/qspi.h"
   1:../../../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../../libDaisy/src/per/qspi.h **** 
   4:../../../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../../libDaisy/src/per/qspi.h **** 
   6:../../../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../../../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../../libDaisy/src/per/qspi.h **** 
   9:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../../libDaisy/src/per/qspi.h **** 
  19:../../../libDaisy/src/per/qspi.h **** namespace daisy
  20:../../../libDaisy/src/per/qspi.h **** {
  21:../../../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../../libDaisy/src/per/qspi.h **** @{
  23:../../../libDaisy/src/per/qspi.h **** */
  24:../../../libDaisy/src/per/qspi.h **** 
  25:../../../libDaisy/src/per/qspi.h **** /** 
  26:../../../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../../libDaisy/src/per/qspi.h **** */
  30:../../../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../../../libDaisy/src/per/qspi.h **** {
ARM GAS  /tmp/ccAKQp7X.s 			page 70


  32:../../../libDaisy/src/per/qspi.h ****   public:
  33:../../../libDaisy/src/per/qspi.h ****     enum Result
  34:../../../libDaisy/src/per/qspi.h ****     {
  35:../../../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../../../libDaisy/src/per/qspi.h ****         ERR
  37:../../../libDaisy/src/per/qspi.h ****     };
  38:../../../libDaisy/src/per/qspi.h **** 
  39:../../../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../../libDaisy/src/per/qspi.h ****          * 
  43:../../../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../../libDaisy/src/per/qspi.h ****          */
  48:../../../libDaisy/src/per/qspi.h ****     enum Status
  49:../../../libDaisy/src/per/qspi.h ****     {
  50:../../../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../../libDaisy/src/per/qspi.h ****     };
  55:../../../libDaisy/src/per/qspi.h **** 
  56:../../../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../../libDaisy/src/per/qspi.h ****     struct Config
  58:../../../libDaisy/src/per/qspi.h ****     {
  59:../../../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../../libDaisy/src/per/qspi.h ****         enum Device
  61:../../../libDaisy/src/per/qspi.h ****         {
  62:../../../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../../libDaisy/src/per/qspi.h ****         };
  66:../../../libDaisy/src/per/qspi.h **** 
  67:../../../libDaisy/src/per/qspi.h ****         /** 
  68:../../../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../../../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../../libDaisy/src/per/qspi.h ****         */
  74:../../../libDaisy/src/per/qspi.h ****         enum Mode
  75:../../../libDaisy/src/per/qspi.h ****         {
  76:../../../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../../libDaisy/src/per/qspi.h ****         };
  80:../../../libDaisy/src/per/qspi.h **** 
  81:../../../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../../libDaisy/src/per/qspi.h ****         struct
  83:../../../libDaisy/src/per/qspi.h ****         {
  84:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
ARM GAS  /tmp/ccAKQp7X.s 			page 71


  89:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../../../libDaisy/src/per/qspi.h **** 
  92:../../../libDaisy/src/per/qspi.h ****         Device device;
  93:../../../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../../../libDaisy/src/per/qspi.h ****     };
  95:../../../libDaisy/src/per/qspi.h **** 
  96:../../../libDaisy/src/per/qspi.h ****     /** 
  97:../../../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../../libDaisy/src/per/qspi.h ****         */
 101:../../../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../../libDaisy/src/per/qspi.h **** 
 103:../../../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../../libDaisy/src/per/qspi.h **** 
 106:../../../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../../libDaisy/src/per/qspi.h ****     /** 
 109:../../../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../../libDaisy/src/per/qspi.h ****         */
 113:../../../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../../../libDaisy/src/per/qspi.h **** 
 115:../../../libDaisy/src/per/qspi.h ****     /** 
 116:../../../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../../libDaisy/src/per/qspi.h ****         */
 123:../../../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../../libDaisy/src/per/qspi.h **** 
 125:../../../libDaisy/src/per/qspi.h ****     /** 
 126:../../../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../../libDaisy/src/per/qspi.h ****         */
 132:../../../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../../libDaisy/src/per/qspi.h **** 
 134:../../../libDaisy/src/per/qspi.h ****     /** 
 135:../../../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../../libDaisy/src/per/qspi.h ****         */
 142:../../../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../../libDaisy/src/per/qspi.h **** 
 144:../../../libDaisy/src/per/qspi.h ****     /**  
 145:../../../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
ARM GAS  /tmp/ccAKQp7X.s 			page 72


 146:../../../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../../libDaisy/src/per/qspi.h ****         */
 150:../../../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../../libDaisy/src/per/qspi.h **** 
 152:../../../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../../../libDaisy/src/per/qspi.h ****      */
 155:../../../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../../libDaisy/src/per/qspi.h **** 
 157:../../../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../../libDaisy/src/per/qspi.h ****      * 
 161:../../../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../../libDaisy/src/per/qspi.h ****     */
 164:../../../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../../libDaisy/src/per/qspi.h **** 
 166:../../../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 2168              		.loc 12 166 5 view .LVU616
 2169              	.LBE520:
 2170              	.LBE519:
 2171              	.LBE518:
 2172              	.LBE517:
 2173              	.LBE516:
 2174              		.loc 7 238 1 is_stmt 0 view .LVU617
 2175 0000 08B5     		push	{r3, lr}
 2176              		.cfi_def_cfa_offset 8
 2177              		.cfi_offset 3, -8
 2178              		.cfi_offset 14, -4
 2179              	.LBB547:
 2180              	.LBB545:
 2181              	.LBB541:
 2182              	.LBB539:
 2183              	.LBB525:
 2184              	.LBB521:
 2185              	.LBB522:
 2186              		.loc 12 166 34 view .LVU618
 2187 0002 0B48     		ldr	r0, .L87
 2188 0004 0023     		movs	r3, #0
 2189              	.LBE522:
 2190              	.LBE521:
 2191              	.LBE525:
 2192              	.LBE539:
 2193              	.LBE541:
   8:oscillator.cpp **** DaisySeed hw;
 2194              		.loc 7 8 11 view .LVU619
 2195 0006 0B4A     		ldr	r2, .L87+4
 2196              	.LBB542:
 2197              	.LBB540:
 2198              	.LBB526:
 2199              	.LBB524:
 2200              	.LBB523:
 2201              		.loc 12 166 34 view .LVU620
 2202 0008 0360     		str	r3, [r0]
ARM GAS  /tmp/ccAKQp7X.s 			page 73


 2203              	.LVL134:
 2204              		.loc 12 166 34 view .LVU621
 2205              	.LBE523:
 2206              	.LBE524:
 2207              	.LBE526:
 2208              	.LBB527:
 2209              	.LBI527:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2210              		.loc 6 95 5 is_stmt 1 view .LVU622
 2211              	.LBB528:
 2212              	.LBB529:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2213              		.loc 6 95 35 is_stmt 0 view .LVU623
 2214 000a 4361     		str	r3, [r0, #20]
 2215              	.LVL135:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 2216              		.loc 6 95 35 view .LVU624
 2217              	.LBE529:
 2218              	.LBE528:
 2219              	.LBE527:
 2220              	.LBB530:
 2221              	.LBI530:
 109:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 2222              		.loc 5 109 5 is_stmt 1 view .LVU625
 109:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 2223              		.loc 5 109 5 is_stmt 0 view .LVU626
 2224              	.LBE530:
 2225              	.LBB531:
 2226              	.LBI531:
 2227              		.file 13 "../../../libDaisy/src/per/dac.h"
   1:../../../libDaisy/src/per/dac.h **** #pragma once
   2:../../../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../../libDaisy/src/per/dac.h **** 
   5:../../../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../../libDaisy/src/per/dac.h **** 
   7:../../../libDaisy/src/per/dac.h **** namespace daisy
   8:../../../libDaisy/src/per/dac.h **** {
   9:../../../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../../../libDaisy/src/per/dac.h ****  ** 
  12:../../../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../../libDaisy/src/per/dac.h ****  **
  15:../../../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../../libDaisy/src/per/dac.h ****  **
  17:../../../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../../libDaisy/src/per/dac.h ****  ***/
  21:../../../libDaisy/src/per/dac.h **** class DacHandle
  22:../../../libDaisy/src/per/dac.h **** {
  23:../../../libDaisy/src/per/dac.h ****   public:
  24:../../../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../../libDaisy/src/per/dac.h ****     enum class Result
  26:../../../libDaisy/src/per/dac.h ****     {
  27:../../../libDaisy/src/per/dac.h ****         OK,
ARM GAS  /tmp/ccAKQp7X.s 			page 74


  28:../../../libDaisy/src/per/dac.h ****         ERR,
  29:../../../libDaisy/src/per/dac.h ****     };
  30:../../../libDaisy/src/per/dac.h **** 
  31:../../../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../../libDaisy/src/per/dac.h ****     enum class Channel
  33:../../../libDaisy/src/per/dac.h ****     {
  34:../../../libDaisy/src/per/dac.h ****         ONE,
  35:../../../libDaisy/src/per/dac.h ****         TWO,
  36:../../../libDaisy/src/per/dac.h ****         BOTH,
  37:../../../libDaisy/src/per/dac.h ****     };
  38:../../../libDaisy/src/per/dac.h **** 
  39:../../../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../../libDaisy/src/per/dac.h ****      **
  41:../../../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../../libDaisy/src/per/dac.h ****      **
  43:../../../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../../libDaisy/src/per/dac.h ****      ***/
  46:../../../libDaisy/src/per/dac.h ****     enum class Mode
  47:../../../libDaisy/src/per/dac.h ****     {
  48:../../../libDaisy/src/per/dac.h ****         POLLING,
  49:../../../libDaisy/src/per/dac.h ****         DMA,
  50:../../../libDaisy/src/per/dac.h ****     };
  51:../../../libDaisy/src/per/dac.h **** 
  52:../../../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../../libDaisy/src/per/dac.h ****      ***/
  56:../../../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../../../libDaisy/src/per/dac.h ****     {
  58:../../../libDaisy/src/per/dac.h ****         BITS_8,
  59:../../../libDaisy/src/per/dac.h ****         BITS_12
  60:../../../libDaisy/src/per/dac.h ****     };
  61:../../../libDaisy/src/per/dac.h **** 
  62:../../../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../../../libDaisy/src/per/dac.h ****     {
  65:../../../libDaisy/src/per/dac.h ****         ENABLED,
  66:../../../libDaisy/src/per/dac.h ****         DISABLED,
  67:../../../libDaisy/src/per/dac.h ****     };
  68:../../../libDaisy/src/per/dac.h **** 
  69:../../../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../../libDaisy/src/per/dac.h ****     struct Config
  71:../../../libDaisy/src/per/dac.h ****     {
  72:../../../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../../../libDaisy/src/per/dac.h **** 
  78:../../../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../../../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../../../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../../../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../../../libDaisy/src/per/dac.h ****     };
  83:../../../libDaisy/src/per/dac.h **** 
  84:../../../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
ARM GAS  /tmp/ccAKQp7X.s 			page 75


 2228              		.loc 13 84 5 is_stmt 1 view .LVU627
 2229              	.LBB532:
 2230              	.LBB533:
 2231              		.loc 13 84 33 is_stmt 0 view .LVU628
 2232 000c 0362     		str	r3, [r0, #32]
 2233              	.LVL136:
 2234              		.loc 13 84 33 view .LVU629
 2235              	.LBE533:
 2236              	.LBE532:
 2237              	.LBE531:
 2238              	.LBB534:
 2239              	.LBI534:
  40:../../../libDaisy/src/hid/usb.h **** 
 2240              		.loc 4 40 5 is_stmt 1 view .LVU630
  40:../../../libDaisy/src/hid/usb.h **** 
 2241              		.loc 4 40 5 is_stmt 0 view .LVU631
 2242              	.LBE534:
 2243              	.LBB535:
 2244              	.LBI535:
  96:../../../libDaisy/src/sys/system.h ****     ~System() {}
 2245              		.loc 3 96 5 is_stmt 1 view .LVU632
  96:../../../libDaisy/src/sys/system.h ****     ~System() {}
 2246              		.loc 3 96 5 is_stmt 0 view .LVU633
 2247              	.LBE535:
 2248              	.LBB536:
 2249              	.LBI536:
 2250              		.file 14 "../../../libDaisy/src/per/sai.h"
   1:../../../libDaisy/src/per/sai.h **** #pragma once
   2:../../../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../../../libDaisy/src/per/sai.h **** 
   5:../../../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../../../libDaisy/src/per/sai.h **** 
   7:../../../libDaisy/src/per/sai.h **** namespace daisy
   8:../../../libDaisy/src/per/sai.h **** {
   9:../../../libDaisy/src/per/sai.h **** /** 
  10:../../../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../../libDaisy/src/per/sai.h ****  * 
  14:../../../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../../libDaisy/src/per/sai.h ****  *
  18:../../../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../../libDaisy/src/per/sai.h ****  * 
  21:../../../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../../../libDaisy/src/per/sai.h ****  * 
  23:../../../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
ARM GAS  /tmp/ccAKQp7X.s 			page 76


  31:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../../../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../../../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../../../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../../libDaisy/src/per/sai.h ****  */
  42:../../../libDaisy/src/per/sai.h **** class SaiHandle
  43:../../../libDaisy/src/per/sai.h **** {
  44:../../../libDaisy/src/per/sai.h ****   public:
  45:../../../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../../libDaisy/src/per/sai.h ****     struct Config
  47:../../../libDaisy/src/per/sai.h ****     {
  48:../../../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../../../libDaisy/src/per/sai.h ****         {
  51:../../../libDaisy/src/per/sai.h ****             SAI_1,
  52:../../../libDaisy/src/per/sai.h ****             SAI_2,
  53:../../../libDaisy/src/per/sai.h ****         };
  54:../../../libDaisy/src/per/sai.h **** 
  55:../../../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../../../libDaisy/src/per/sai.h ****         {
  58:../../../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../../../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../../../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../../../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:../../../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../../../libDaisy/src/per/sai.h ****         };
  64:../../../libDaisy/src/per/sai.h **** 
  65:../../../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../../../libDaisy/src/per/sai.h ****         {
  68:../../../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../../../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../../../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../../../libDaisy/src/per/sai.h ****         };
  72:../../../libDaisy/src/per/sai.h **** 
  73:../../../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../../libDaisy/src/per/sai.h ****          */
  77:../../../libDaisy/src/per/sai.h ****         enum class Sync
  78:../../../libDaisy/src/per/sai.h ****         {
  79:../../../libDaisy/src/per/sai.h ****             MASTER,
  80:../../../libDaisy/src/per/sai.h ****             SLAVE,
  81:../../../libDaisy/src/per/sai.h ****         };
  82:../../../libDaisy/src/per/sai.h **** 
  83:../../../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../../libDaisy/src/per/sai.h ****         enum class Direction
  85:../../../libDaisy/src/per/sai.h ****         {
  86:../../../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../../../libDaisy/src/per/sai.h ****             RECEIVE,
ARM GAS  /tmp/ccAKQp7X.s 			page 77


  88:../../../libDaisy/src/per/sai.h ****         };
  89:../../../libDaisy/src/per/sai.h **** 
  90:../../../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../../../libDaisy/src/per/sai.h ****         struct
  92:../../../libDaisy/src/per/sai.h ****         {
  93:../../../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../../libDaisy/src/per/sai.h ****         } pin_config;
  95:../../../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../../../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../../../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../../libDaisy/src/per/sai.h ****     };
 100:../../../libDaisy/src/per/sai.h **** 
 101:../../../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../../../libDaisy/src/per/sai.h ****     enum class Result
 103:../../../libDaisy/src/per/sai.h ****     {
 104:../../../libDaisy/src/per/sai.h ****         OK,
 105:../../../libDaisy/src/per/sai.h ****         ERR,
 106:../../../libDaisy/src/per/sai.h ****     };
 107:../../../libDaisy/src/per/sai.h **** 
 108:../../../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 2251              		.loc 14 108 5 is_stmt 1 view .LVU634
 2252              	.LBB537:
 2253              	.LBB538:
 2254              		.loc 14 108 33 is_stmt 0 view .LVU635
 2255 000e C363     		str	r3, [r0, #60]
 2256              	.LVL137:
 2257              		.loc 14 108 33 view .LVU636
 2258              	.LBE538:
 2259              	.LBE537:
 2260              	.LBE536:
 2261              	.LBE540:
 2262              	.LBE542:
   8:oscillator.cpp **** DaisySeed hw;
 2263              		.loc 7 8 11 view .LVU637
 2264 0010 0949     		ldr	r1, .L87+8
 2265 0012 FFF7FEFF 		bl	__aeabi_atexit
 2266              	.LVL138:
 2267              	.LBB543:
 2268              	.LBI543:
  23:../../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2269              		.loc 1 23 5 is_stmt 1 view .LVU638
  23:../../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2270              		.loc 1 23 5 is_stmt 0 view .LVU639
 2271              	.LBE543:
   9:oscillator.cpp **** Oscillator osc1, osc2;
 2272              		.loc 7 9 12 view .LVU640
 2273 0016 0949     		ldr	r1, .L87+12
 2274 0018 064A     		ldr	r2, .L87+4
 2275 001a 0948     		ldr	r0, .L87+16
 2276 001c FFF7FEFF 		bl	__aeabi_atexit
 2277              	.LVL139:
 2278              	.LBB544:
 2279              	.LBI544:
  23:../../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 2280              		.loc 1 23 5 is_stmt 1 view .LVU641
  23:../../../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
ARM GAS  /tmp/ccAKQp7X.s 			page 78


 2281              		.loc 1 23 5 is_stmt 0 view .LVU642
 2282              	.LBE544:
   9:oscillator.cpp **** Oscillator osc1, osc2;
 2283              		.loc 7 9 18 view .LVU643
 2284 0020 044A     		ldr	r2, .L87+4
 2285 0022 0649     		ldr	r1, .L87+12
 2286 0024 0748     		ldr	r0, .L87+20
 2287              	.LBE545:
 2288              	.LBE547:
 2289              		.loc 7 238 1 view .LVU644
 2290 0026 BDE80840 		pop	{r3, lr}
 2291              		.cfi_restore 14
 2292              		.cfi_restore 3
 2293              		.cfi_def_cfa_offset 0
 2294              	.LBB548:
 2295              	.LBB546:
   9:oscillator.cpp **** Oscillator osc1, osc2;
 2296              		.loc 7 9 18 view .LVU645
 2297 002a FFF7FEBF 		b	__aeabi_atexit
 2298              	.LVL140:
 2299              	.L88:
 2300 002e 00BF     		.align	2
 2301              	.L87:
 2302 0030 00000000 		.word	.LANCHOR1
 2303 0034 00000000 		.word	__dso_handle
 2304 0038 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 2305 003c 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 2306 0040 00000000 		.word	.LANCHOR11
 2307 0044 00000000 		.word	.LANCHOR12
 2308              	.LBE546:
 2309              	.LBE548:
 2310              		.cfi_endproc
 2311              	.LFE5248:
 2313              		.section	.init_array,"aw",%init_array
 2314              		.align	2
 2315 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 2316              		.global	scaleLockEnabled
 2317              		.global	quantizeMode
 2318              		.global	lastButtonStateScaleLock
 2319              		.global	lastButtonStateQuant
 2320              		.global	lastButtonState2
 2321              		.global	lastButtonState1
 2322              		.global	currentWaveform2
 2323              		.global	currentWaveform1
 2324              		.global	keyPot
 2325              		.global	pulseW2
 2326              		.global	pulseW1
 2327              		.global	pitch2
 2328              		.global	pitch1
 2329              		.global	volume2
 2330              		.global	volume1
 2331              		.global	adcConfig
 2332              		.global	osc2
 2333              		.global	osc1
 2334              		.global	hw
 2335              		.section	.rodata
 2336              		.align	2
ARM GAS  /tmp/ccAKQp7X.s 			page 79


 2337              		.set	.LANCHOR0,. + 0
 2338              	.LC0:
 2339 0000 00000000 		.word	0
 2340 0004 02000000 		.word	2
 2341 0008 04000000 		.word	4
 2342 000c 05000000 		.word	5
 2343 0010 07000000 		.word	7
 2344 0014 09000000 		.word	9
 2345 0018 0B000000 		.word	11
 2346              	.LC1:
 2347 001c 00000000 		.word	0
 2348 0020 02000000 		.word	2
 2349 0024 03000000 		.word	3
 2350 0028 05000000 		.word	5
 2351 002c 07000000 		.word	7
 2352 0030 08000000 		.word	8
 2353 0034 0A000000 		.word	10
 2354              		.section	.bss.adcConfig,"aw",%nobits
 2355              		.align	2
 2356              		.set	.LANCHOR19,. + 0
 2359              	adcConfig:
 2360 0000 00000000 		.space	126
 2360      00000000 
 2360      00000000 
 2360      00000000 
 2360      00000000 
 2361              		.section	.bss.currentWaveform1,"aw",%nobits
 2362              		.align	2
 2363              		.set	.LANCHOR13,. + 0
 2366              	currentWaveform1:
 2367 0000 00000000 		.space	4
 2368              		.section	.bss.currentWaveform2,"aw",%nobits
 2369              		.align	2
 2370              		.set	.LANCHOR14,. + 0
 2373              	currentWaveform2:
 2374 0000 00000000 		.space	4
 2375              		.section	.bss.hw,"aw",%nobits
 2376              		.align	2
 2377              		.set	.LANCHOR1,. + 0
 2380              	hw:
 2381 0000 00000000 		.space	64
 2381      00000000 
 2381      00000000 
 2381      00000000 
 2381      00000000 
 2382              		.section	.bss.keyPot,"aw",%nobits
 2383              		.align	2
 2384              		.set	.LANCHOR8,. + 0
 2387              	keyPot:
 2388 0000 00000000 		.space	4
 2389              		.section	.bss.lastButtonState1,"aw",%nobits
 2390              		.set	.LANCHOR20,. + 0
 2393              	lastButtonState1:
 2394 0000 00       		.space	1
 2395              		.section	.bss.lastButtonState2,"aw",%nobits
 2396              		.set	.LANCHOR21,. + 0
 2399              	lastButtonState2:
ARM GAS  /tmp/ccAKQp7X.s 			page 80


 2400 0000 00       		.space	1
 2401              		.section	.bss.lastButtonStateQuant,"aw",%nobits
 2402              		.set	.LANCHOR22,. + 0
 2405              	lastButtonStateQuant:
 2406 0000 00       		.space	1
 2407              		.section	.bss.lastButtonStateScaleLock,"aw",%nobits
 2408              		.set	.LANCHOR23,. + 0
 2411              	lastButtonStateScaleLock:
 2412 0000 00       		.space	1
 2413              		.section	.bss.osc1,"aw",%nobits
 2414              		.align	2
 2415              		.set	.LANCHOR11,. + 0
 2418              	osc1:
 2419 0000 00000000 		.space	44
 2419      00000000 
 2419      00000000 
 2419      00000000 
 2419      00000000 
 2420              		.section	.bss.osc2,"aw",%nobits
 2421              		.align	2
 2422              		.set	.LANCHOR12,. + 0
 2425              	osc2:
 2426 0000 00000000 		.space	44
 2426      00000000 
 2426      00000000 
 2426      00000000 
 2426      00000000 
 2427              		.section	.bss.pitch1,"aw",%nobits
 2428              		.align	2
 2429              		.set	.LANCHOR3,. + 0
 2432              	pitch1:
 2433 0000 00000000 		.space	4
 2434              		.section	.bss.pitch2,"aw",%nobits
 2435              		.align	2
 2436              		.set	.LANCHOR6,. + 0
 2439              	pitch2:
 2440 0000 00000000 		.space	4
 2441              		.section	.bss.pulseW1,"aw",%nobits
 2442              		.align	2
 2443              		.set	.LANCHOR4,. + 0
 2446              	pulseW1:
 2447 0000 00000000 		.space	4
 2448              		.section	.bss.pulseW2,"aw",%nobits
 2449              		.align	2
 2450              		.set	.LANCHOR7,. + 0
 2453              	pulseW2:
 2454 0000 00000000 		.space	4
 2455              		.section	.bss.quantizeMode,"aw",%nobits
 2456              		.set	.LANCHOR9,. + 0
 2459              	quantizeMode:
 2460 0000 00       		.space	1
 2461              		.section	.bss.scaleLockEnabled,"aw",%nobits
 2462              		.set	.LANCHOR10,. + 0
 2465              	scaleLockEnabled:
 2466 0000 00       		.space	1
 2467              		.section	.bss.volume1,"aw",%nobits
 2468              		.align	2
ARM GAS  /tmp/ccAKQp7X.s 			page 81


 2469              		.set	.LANCHOR2,. + 0
 2472              	volume1:
 2473 0000 00000000 		.space	4
 2474              		.section	.bss.volume2,"aw",%nobits
 2475              		.align	2
 2476              		.set	.LANCHOR5,. + 0
 2479              	volume2:
 2480 0000 00000000 		.space	4
 2481              		.section	.rodata._ZN5daisy4seedL3D11E,"a"
 2482              		.align	2
 2483              		.set	.LANCHOR18,. + 0
 2486              	_ZN5daisy4seedL3D11E:
 2487 0000 01       		.byte	1
 2488 0001 08       		.byte	8
 2489              		.section	.rodata._ZN5daisy4seedL3D12E,"a"
 2490              		.align	2
 2491              		.set	.LANCHOR17,. + 0
 2494              	_ZN5daisy4seedL3D12E:
 2495 0000 01       		.byte	1
 2496 0001 09       		.byte	9
 2497              		.section	.rodata._ZN5daisy4seedL3D13E,"a"
 2498              		.align	2
 2499              		.set	.LANCHOR16,. + 0
 2502              	_ZN5daisy4seedL3D13E:
 2503 0000 01       		.byte	1
 2504 0001 06       		.byte	6
 2505              		.section	.rodata._ZN5daisy4seedL3D14E,"a"
 2506              		.align	2
 2507              		.set	.LANCHOR15,. + 0
 2510              	_ZN5daisy4seedL3D14E:
 2511 0000 01       		.byte	1
 2512 0001 07       		.byte	7
 2513              		.text
 2514              	.Letext0:
 2515              		.file 15 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/machine/
 2516              		.file 16 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_std
 2517              		.file 17 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdint.h
 2518              		.file 18 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/i
 2519              		.file 19 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2520              		.file 20 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2521              		.file 21 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2522              		.file 22 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2523              		.file 23 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2524              		.file 24 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2525              		.file 25 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2526              		.file 26 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2527              		.file 27 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2528              		.file 28 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2529              		.file 29 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2530              		.file 30 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2531              		.file 31 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2532              		.file 32 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2533              		.file 33 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2534              		.file 34 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2535              		.file 35 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2536              		.file 36 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/_typ
 2537              		.file 37 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/reen
ARM GAS  /tmp/ccAKQp7X.s 			page 82


 2538              		.file 38 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/sys/lock
 2539              		.file 39 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/math.h"
 2540              		.file 40 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdlib.h
 2541              		.file 41 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2542              		.file 42 "../../../DaisySP/Source/Control/adenv.h"
 2543              		.file 43 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/lib/gcc/arm-none-eabi/10.2.1/i
 2544              		.file 44 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/wchar.h"
 2545              		.file 45 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/locale.h
 2546              		.file 46 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/stdio.h"
 2547              		.file 47 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/c++/10.2
 2548              		.file 48 "/home/erzire/Developer/gcc-arm-none-eabi-10-2020-q4-major/arm-none-eabi/include/string.h
 2549              		.file 49 "../../../libDaisy/src/per/tim.h"
 2550              		.file 50 "../../../libDaisy/src/util/wav_format.h"
 2551              		.file 51 "../../../libDaisy/src/dev/max11300.h"
 2552              		.file 52 "../../../libDaisy/src/dev/sdram.h"
 2553              		.file 53 "../../../libDaisy/src/dev/sr_595.h"
 2554              		.file 54 "<built-in>"
ARM GAS  /tmp/ccAKQp7X.s 			page 83


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oscillator.cpp
     /tmp/ccAKQp7X.s:17     .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
     /tmp/ccAKQp7X.s:26     .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
     /tmp/ccAKQp7X.s:26     .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
     /tmp/ccAKQp7X.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
     /tmp/ccAKQp7X.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
     /tmp/ccAKQp7X.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
     /tmp/ccAKQp7X.s:92     .text._Z13QuantizePitchf9QuantModei:0000000000000000 $t
     /tmp/ccAKQp7X.s:100    .text._Z13QuantizePitchf9QuantModei:0000000000000000 _Z13QuantizePitchf9QuantModei
     /tmp/ccAKQp7X.s:395    .text._Z13QuantizePitchf9QuantModei:0000000000000148 $d
     /tmp/ccAKQp7X.s:406    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
     /tmp/ccAKQp7X.s:414    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
     /tmp/ccAKQp7X.s:1031   .text._Z13AudioCallbackPKPKfPPfj:00000000000001cc $d
     /tmp/ccAKQp7X.s:1054   .text._Z15UpdateWaveform1v:0000000000000000 $t
     /tmp/ccAKQp7X.s:1062   .text._Z15UpdateWaveform1v:0000000000000000 _Z15UpdateWaveform1v
     /tmp/ccAKQp7X.s:1151   .text._Z15UpdateWaveform1v:000000000000003c $d
     /tmp/ccAKQp7X.s:1158   .text._Z15UpdateWaveform2v:0000000000000000 $t
     /tmp/ccAKQp7X.s:1166   .text._Z15UpdateWaveform2v:0000000000000000 _Z15UpdateWaveform2v
     /tmp/ccAKQp7X.s:1255   .text._Z15UpdateWaveform2v:000000000000003c $d
     /tmp/ccAKQp7X.s:1262   .text.startup.main:0000000000000000 $t
     /tmp/ccAKQp7X.s:1270   .text.startup.main:0000000000000000 main
     /tmp/ccAKQp7X.s:2109   .text.startup.main:00000000000002c4 $d
     /tmp/ccAKQp7X.s:2143   .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
     /tmp/ccAKQp7X.s:2150   .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
     /tmp/ccAKQp7X.s:2302   .text.startup._GLOBAL__sub_I_hw:0000000000000030 $d
     /tmp/ccAKQp7X.s:2314   .init_array:0000000000000000 $d
     /tmp/ccAKQp7X.s:2465   .bss.scaleLockEnabled:0000000000000000 scaleLockEnabled
     /tmp/ccAKQp7X.s:2459   .bss.quantizeMode:0000000000000000 quantizeMode
     /tmp/ccAKQp7X.s:2411   .bss.lastButtonStateScaleLock:0000000000000000 lastButtonStateScaleLock
     /tmp/ccAKQp7X.s:2405   .bss.lastButtonStateQuant:0000000000000000 lastButtonStateQuant
     /tmp/ccAKQp7X.s:2399   .bss.lastButtonState2:0000000000000000 lastButtonState2
     /tmp/ccAKQp7X.s:2393   .bss.lastButtonState1:0000000000000000 lastButtonState1
     /tmp/ccAKQp7X.s:2373   .bss.currentWaveform2:0000000000000000 currentWaveform2
     /tmp/ccAKQp7X.s:2366   .bss.currentWaveform1:0000000000000000 currentWaveform1
     /tmp/ccAKQp7X.s:2387   .bss.keyPot:0000000000000000 keyPot
     /tmp/ccAKQp7X.s:2453   .bss.pulseW2:0000000000000000 pulseW2
     /tmp/ccAKQp7X.s:2446   .bss.pulseW1:0000000000000000 pulseW1
     /tmp/ccAKQp7X.s:2439   .bss.pitch2:0000000000000000 pitch2
     /tmp/ccAKQp7X.s:2432   .bss.pitch1:0000000000000000 pitch1
     /tmp/ccAKQp7X.s:2479   .bss.volume2:0000000000000000 volume2
     /tmp/ccAKQp7X.s:2472   .bss.volume1:0000000000000000 volume1
     /tmp/ccAKQp7X.s:2359   .bss.adcConfig:0000000000000000 adcConfig
     /tmp/ccAKQp7X.s:2425   .bss.osc2:0000000000000000 osc2
     /tmp/ccAKQp7X.s:2418   .bss.osc1:0000000000000000 osc1
     /tmp/ccAKQp7X.s:2380   .bss.hw:0000000000000000 hw
     /tmp/ccAKQp7X.s:2336   .rodata:0000000000000000 $d
     /tmp/ccAKQp7X.s:2355   .bss.adcConfig:0000000000000000 $d
     /tmp/ccAKQp7X.s:2362   .bss.currentWaveform1:0000000000000000 $d
     /tmp/ccAKQp7X.s:2369   .bss.currentWaveform2:0000000000000000 $d
     /tmp/ccAKQp7X.s:2376   .bss.hw:0000000000000000 $d
     /tmp/ccAKQp7X.s:2383   .bss.keyPot:0000000000000000 $d
     /tmp/ccAKQp7X.s:2394   .bss.lastButtonState1:0000000000000000 $d
     /tmp/ccAKQp7X.s:2400   .bss.lastButtonState2:0000000000000000 $d
     /tmp/ccAKQp7X.s:2406   .bss.lastButtonStateQuant:0000000000000000 $d
     /tmp/ccAKQp7X.s:2412   .bss.lastButtonStateScaleLock:0000000000000000 $d
     /tmp/ccAKQp7X.s:2414   .bss.osc1:0000000000000000 $d
ARM GAS  /tmp/ccAKQp7X.s 			page 84


     /tmp/ccAKQp7X.s:2421   .bss.osc2:0000000000000000 $d
     /tmp/ccAKQp7X.s:2428   .bss.pitch1:0000000000000000 $d
     /tmp/ccAKQp7X.s:2435   .bss.pitch2:0000000000000000 $d
     /tmp/ccAKQp7X.s:2442   .bss.pulseW1:0000000000000000 $d
     /tmp/ccAKQp7X.s:2449   .bss.pulseW2:0000000000000000 $d
     /tmp/ccAKQp7X.s:2460   .bss.quantizeMode:0000000000000000 $d
     /tmp/ccAKQp7X.s:2466   .bss.scaleLockEnabled:0000000000000000 $d
     /tmp/ccAKQp7X.s:2468   .bss.volume1:0000000000000000 $d
     /tmp/ccAKQp7X.s:2475   .bss.volume2:0000000000000000 $d
     /tmp/ccAKQp7X.s:2482   .rodata._ZN5daisy4seedL3D11E:0000000000000000 $d
     /tmp/ccAKQp7X.s:2486   .rodata._ZN5daisy4seedL3D11E:0000000000000000 _ZN5daisy4seedL3D11E
     /tmp/ccAKQp7X.s:2490   .rodata._ZN5daisy4seedL3D12E:0000000000000000 $d
     /tmp/ccAKQp7X.s:2494   .rodata._ZN5daisy4seedL3D12E:0000000000000000 _ZN5daisy4seedL3D12E
     /tmp/ccAKQp7X.s:2498   .rodata._ZN5daisy4seedL3D13E:0000000000000000 $d
     /tmp/ccAKQp7X.s:2502   .rodata._ZN5daisy4seedL3D13E:0000000000000000 _ZN5daisy4seedL3D13E
     /tmp/ccAKQp7X.s:2506   .rodata._ZN5daisy4seedL3D14E:0000000000000000 $d
     /tmp/ccAKQp7X.s:2510   .rodata._ZN5daisy4seedL3D14E:0000000000000000 _ZN5daisy4seedL3D14E
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
powf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy4GPIO4ReadEv
_ZN5daisy6System5DelayEm
__aeabi_atexit
__dso_handle
